,model,means,stds,params
0,linearregression,"[-0.89417108 -0.89417169 -0.89417518 -0.89418038 -0.894169   -0.89416889
 -0.8941701  -0.89416991 -0.89415889 -0.89416963 -0.89416914 -0.89416902
 -0.89416878 -0.89419028 -0.89418175 -0.89415642 -0.89417882 -0.89416952
 -0.89417056 -0.89416903 -0.89416072 -0.89417289 -0.89417337 -0.89416875
 -0.89413209 -0.89416981 -0.8941711  -0.89414457 -0.89417155 -0.89417402
 -0.89417396 -0.89330931 -0.60969165 -0.89415769 -0.89417208 -0.60969165
 -0.89416932 -0.89416932 -0.89416875 -0.89416932 -0.60969165 -0.89417669
 -0.86056576 -0.60969165 -0.60969165 -0.60969165 -0.89417032 -0.8941703
 -0.60969165 -0.60969165 -0.8941708  -0.89417078 -0.89418507 -0.89061504
 -0.60969165 -0.88896688 -0.60969165 -0.89417245 -0.89417247 -0.89417246
 -0.60969165 -0.60969165 -0.60969165 -0.89417607 -0.60969165 -0.60969165
 -0.60969165 -0.88606231 -0.60969165 -0.89310373 -0.88880285 -0.60969165
 -0.60969165 -0.89416875 -0.60969165 -0.60969165 -0.60969165 -0.88785249
 -0.60969165 -0.88635723 -0.89415569 -0.60969165 -0.89345337 -0.87068506
 -0.89416875 -0.89416875 -0.60969165 -0.89416875 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.89416971 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.88613003 -0.60969165
 -0.60969165 -0.87572941 -0.89177822 -0.60969165 -0.60969165 -0.89289807
 -0.60969165 -0.60969165 -0.89415314 -0.89259659 -0.89051458 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.8814994  -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.8900247  -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165 -0.60969165
 -0.60969165 -0.60969165]","[0.67005533 0.67005476 0.6700515  0.67004665 0.67005727 0.67005738
 0.67005625 0.67005643 0.67005534 0.67005669 0.67005714 0.67005726
 0.67005748 0.67003741 0.67004537 0.6700385  0.6700481  0.67005678
 0.67005582 0.67005724 0.67005662 0.67005364 0.67005319 0.6700575
 0.67003846 0.67005652 0.67005531 0.67004691 0.67005489 0.67005259
 0.67005264 0.66947921 0.47350668 0.67005453 0.67005439 0.47350668
 0.67005697 0.67005697 0.6700575  0.67005697 0.47350668 0.67005009
 0.64849752 0.47350668 0.47350668 0.47350668 0.67005604 0.67005606
 0.47350668 0.47350668 0.67005559 0.67005561 0.67004226 0.6676624
 0.47350668 0.66656005 0.47350668 0.67005405 0.67005403 0.67005404
 0.47350668 0.47350668 0.47350668 0.67005067 0.47350668 0.47350668
 0.47350668 0.66462756 0.47350668 0.66934021 0.66645069 0.47350668
 0.47350668 0.6700575  0.47350668 0.47350668 0.47350668 0.66581494
 0.47350668 0.66482279 0.67003821 0.47350668 0.66958201 0.65472048
 0.6700575  0.6700575  0.47350668 0.6700575  0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.67005661 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.66467249 0.47350668
 0.47350668 0.65791258 0.66845927 0.47350668 0.47350668 0.66920292
 0.47350668 0.47350668 0.67003356 0.66900104 0.66759517 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.66163381 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.66726647 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668 0.47350668
 0.47350668 0.47350668]","[OrderedDict([('alpha', 519702.3248578503)]), OrderedDict([('alpha', 461377.5735134619)]), OrderedDict([('alpha', 281293.8130057291)]), OrderedDict([('alpha', 177878.09975443772)]), OrderedDict([('alpha', 909923.8714599033)]), OrderedDict([('alpha', 950124.3459429184)]), OrderedDict([('alpha', 651783.0149368553)]), OrderedDict([('alpha', 686208.9723704366)]), OrderedDict([('alpha', 33917.17976097572)]), OrderedDict([('alpha', 742443.3833408186)]), OrderedDict([('alpha', 866149.4369597393)]), OrderedDict([('alpha', 905580.2848343956)]), OrderedDict([('alpha', 990544.8190800687)]), OrderedDict([('alpha', 104553.25590286187)]), OrderedDict([('alpha', 162159.91280710528)]), OrderedDict([('alpha', 56205.1947136395)]), OrderedDict([('alpha', 199987.02654160876)]), OrderedDict([('alpha', 766154.85829758)]), OrderedDict([('alpha', 582252.4443733069)]), OrderedDict([('alpha', 900314.4086597837)]), OrderedDict([('alpha', 47545.841926116445)]), OrderedDict([('alpha', 378431.0730242054)]), OrderedDict([('alpha', 352857.32045266277)]), OrderedDict([('alpha', 999937.0289145038)]), OrderedDict([('alpha', 7098.3021975608335)]), OrderedDict([('alpha', 704422.1915352911)]), OrderedDict([('alpha', 518013.81673636887)]), OrderedDict([('alpha', 11744.88099864262)]), OrderedDict([('alpha', 473649.1266879643)]), OrderedDict([('alpha', 323452.575972528)]), OrderedDict([('alpha', 326054.49132655025)]), OrderedDict([('alpha', 279.6890720326495)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 28431.387585012864)]), OrderedDict([('alpha', 430475.59231318487)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 816219.5648297399)]), OrderedDict([('alpha', 816219.5352608274)]), OrderedDict([('alpha', 999754.1841601672)]), OrderedDict([('alpha', 816219.4964082554)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 240630.13087622126)]), OrderedDict([('alpha', 6.586487837927362)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 617020.9495734215)]), OrderedDict([('alpha', 619072.2442181144)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 551510.701052185)]), OrderedDict([('alpha', 554633.8047386248)]), OrderedDict([('alpha', 133501.44563575383)]), OrderedDict([('alpha', 67.10117488413158)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 45.628236930304965)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 405159.2720848357)]), OrderedDict([('alpha', 403613.66431965167)]), OrderedDict([('alpha', 404393.4981618282)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 255935.24759630053)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 29.077055427088872)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 224.9122661432039)]), OrderedDict([('alpha', 44.21491350279372)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 999928.6149682286)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 37.4802001695664)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 30.19679081227881)]), OrderedDict([('alpha', 79065.37864086583)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 335.76721810748285)]), OrderedDict([('alpha', 9.666616590532605)]), OrderedDict([('alpha', 999936.7515780077)]), OrderedDict([('alpha', 999980.7732635181)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 999935.8701189274)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 724584.002685211)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 29.32738421334404)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 12.466153472843965)]), OrderedDict([('alpha', 100.30581451317921)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 189.46600954478012)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 64904.80039864629)]), OrderedDict([('alpha', 152.34197245470895)]), OrderedDict([('alpha', 65.23905430162588)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 18.401969365981323)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 57.44108312474094)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)]), OrderedDict([('alpha', 1e-06)])]"
1,elasticnet,"[-0.89416557 -0.89416624 -0.89416624 -0.89416624 -0.89416582 -0.89416555
 -0.89416593 -0.89416624 -0.89416595 -0.89416624 -0.88834646 -0.89416624
 -0.89416624 -0.89416624 -0.89416624 -0.894166   -0.89416624 -0.89416599
 -0.89415985 -0.89416624 -0.89416624 -0.89416598 -0.89416624 -0.89416624
 -0.66851177 -0.89416508 -0.89416624 -0.89416624 -0.60808074 -0.89390958
 -0.73891063 -0.89380334 -0.60808074 -0.89416624 -0.60823865 -0.89416416
 -0.89416503 -0.89416624 -0.60808074 -0.89416624 -0.60808074 -0.89416587
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.89338091 -0.60808074 -0.60808074 -0.60808074 -0.89317518 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.88675774 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.89209879 -0.88871111 -0.89416624 -0.89416624 -0.89416624 -0.89416624
 -0.89416577 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.8935314
 -0.60808074 -0.88377434 -0.60808074 -0.89416624 -0.60808074 -0.89416624
 -0.894166   -0.60808074 -0.894166   -0.894166   -0.60808074 -0.89416427
 -0.89307181 -0.85648677 -0.60808074 -0.60808074 -0.89416588 -0.60808074
 -0.60808074 -0.60808074 -0.89416397 -0.89416457 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.89416572 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.89416624 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.88705522 -0.60808074 -0.89213822
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.89229679 -0.60808074 -0.60808074 -0.60808074 -0.89416593
 -0.60808074 -0.89416593 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.89361464 -0.60808074 -0.89391197 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.89058507 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.89325664 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.89053671 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074 -0.60808074
 -0.60808074 -0.60808074]","[0.67005941 0.67005985 0.67005985 0.67005985 0.67005957 0.67005939
 0.67005965 0.67005985 0.67005966 0.67005985 0.66614449 0.67005985
 0.67005985 0.67005985 0.67005985 0.67005969 0.67005985 0.67005968
 0.67005552 0.67005985 0.67005985 0.67005968 0.67005985 0.67005985
 0.52746209 0.67005907 0.67005985 0.67005985 0.47178426 0.66988564
 0.59408413 0.66981355 0.47178426 0.67005985 0.47150281 0.67005845
 0.67005903 0.67005985 0.47178426 0.67005985 0.47178426 0.67005961
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.66952721 0.47178426 0.47178426 0.47178426 0.6693879  0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.66508851 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.6686605  0.66638764 0.67005985 0.67005985 0.67005985 0.67005985
 0.67005954 0.47178426 0.47178426 0.47178426 0.47178426 0.66962918
 0.47178426 0.66312056 0.47178426 0.67005985 0.47178426 0.67005985
 0.67005969 0.47178426 0.67005969 0.67005969 0.47178426 0.67005852
 0.66931793 0.64605551 0.47178426 0.47178426 0.67005961 0.47178426
 0.47178426 0.47178426 0.67005832 0.67005873 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.6700595  0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.67005985 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.66528581 0.47178426 0.6686871
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.66879411 0.47178426 0.47178426 0.47178426 0.67005965
 0.47178426 0.67005965 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.6696856  0.47178426 0.66988725 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.66764182 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.66944305 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.66760936 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426 0.47178426
 0.47178426 0.47178426]","[OrderedDict([('alpha', 363231.7093458951), ('l1_ratio', 0)]), OrderedDict([('alpha', 397124.60009664966), ('l1_ratio', 1)]), OrderedDict([('alpha', 99212.61541035329), ('l1_ratio', 1)]), OrderedDict([('alpha', 295197.8948407736), ('l1_ratio', 1)]), OrderedDict([('alpha', 577452.1386034114), ('l1_ratio', 0)]), OrderedDict([('alpha', 352006.4057317675), ('l1_ratio', 0)]), OrderedDict([('alpha', 784467.8283975909), ('l1_ratio', 0)]), OrderedDict([('alpha', 386292.21653696144), ('l1_ratio', 1)]), OrderedDict([('alpha', 827014.9028672989), ('l1_ratio', 0)]), OrderedDict([('alpha', 313539.4559198512), ('l1_ratio', 1)]), OrderedDict([('alpha', 40.714068777573395), ('l1_ratio', 0)]), OrderedDict([('alpha', 478666.5786107185), ('l1_ratio', 1)]), OrderedDict([('alpha', 999819.4122855274), ('l1_ratio', 1)]), OrderedDict([('alpha', 813786.6515921837), ('l1_ratio', 1)]), OrderedDict([('alpha', 904743.8419547722), ('l1_ratio', 1)]), OrderedDict([('alpha', 999977.3066476657), ('l1_ratio', 0)]), OrderedDict([('alpha', 974410.4387059137), ('l1_ratio', 1)]), OrderedDict([('alpha', 958677.893300769), ('l1_ratio', 0)]), OrderedDict([('alpha', 37609.75017474449), ('l1_ratio', 0)]), OrderedDict([('alpha', 680998.7726726177), ('l1_ratio', 1)]), OrderedDict([('alpha', 679896.1157008843), ('l1_ratio', 1)]), OrderedDict([('alpha', 952464.7116735197), ('l1_ratio', 0)]), OrderedDict([('alpha', 550938.6338124805), ('l1_ratio', 1)]), OrderedDict([('alpha', 572868.4787245485), ('l1_ratio', 1)]), OrderedDict([('alpha', 0.33681505031648806), ('l1_ratio', 0)]), OrderedDict([('alpha', 208109.43706062195), ('l1_ratio', 0)]), OrderedDict([('alpha', 69.87719001245395), ('l1_ratio', 1)]), OrderedDict([('alpha', 161091.47467840163), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 935.4586110188218), ('l1_ratio', 0)]), OrderedDict([('alpha', 0.9919960960658527), ('l1_ratio', 0)]), OrderedDict([('alpha', 661.4139172761704), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 41.99314351802886), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 1)]), OrderedDict([('alpha', 116003.49195697252), ('l1_ratio', 0)]), OrderedDict([('alpha', 198672.00304580104), ('l1_ratio', 0)]), OrderedDict([('alpha', 6.281861716599689), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 35.84729602489083), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 663855.2083491241), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 305.33760027223184), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 241.83513671116836), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 31.862117434087416), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 115.63267941203776), ('l1_ratio', 0)]), OrderedDict([('alpha', 43.47327960117028), ('l1_ratio', 0)]), OrderedDict([('alpha', 999816.4308882215), ('l1_ratio', 1)]), OrderedDict([('alpha', 999961.8445102233), ('l1_ratio', 1)]), OrderedDict([('alpha', 999820.1899593039), ('l1_ratio', 1)]), OrderedDict([('alpha', 1000000.0), ('l1_ratio', 1)]), OrderedDict([('alpha', 513592.3551543852), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 377.84926469350796), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 22.552928560015246), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 66.55866042166723), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 159.46934797903134), ('l1_ratio', 1)]), OrderedDict([('alpha', 999824.6285720147), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 999938.8973259737), ('l1_ratio', 0)]), OrderedDict([('alpha', 999914.3711861384), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 122058.28548701669), ('l1_ratio', 0)]), OrderedDict([('alpha', 218.94021726101306), ('l1_ratio', 0)]), OrderedDict([('alpha', 5.8128224912520245), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 673342.6206970926), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 106135.49448425356), ('l1_ratio', 0)]), OrderedDict([('alpha', 144647.5085819244), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 463960.0498699677), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 786739.8968330356), ('l1_ratio', 1)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 33.21861191650789), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 117.89202307800757), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 127.93993876592492), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 784747.4528572893), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 793457.8051760738), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 434.95437115784546), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 944.234505013541), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 66.51755161941611), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 263.54327144982045), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 65.62374364478354), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)]), OrderedDict([('alpha', 1e-06), ('l1_ratio', 0)])]"
2,knn,"[-0.9082673  -0.72184442 -0.84775615 -0.9082673  -0.74374103 -0.74374103
 -0.9082673  -0.74374103 -0.84775615 -0.72184442 -0.84775615 -0.72184442
 -0.84775615 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.74374103 -0.72184442
 -0.84775615 -0.72184442 -0.72184442 -0.72184442 -0.9082673  -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.84775615 -0.9082673  -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.72184442 -0.84775615
 -0.72184442 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.84775615 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.74374103 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.9082673  -0.72184442 -0.72184442
 -0.84775615 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.9082673  -0.72184442 -0.72184442 -0.84775615 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.72184442 -0.9082673
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.9082673  -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.74374103 -0.72184442 -0.72184442 -0.72184442 -0.9082673  -0.72184442
 -0.72184442 -0.74374103 -0.72184442 -0.72184442 -0.74374103 -0.72184442
 -0.84775615 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.84775615
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.9082673  -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442 -0.72184442
 -0.72184442 -0.72184442]","[0.72971091 0.54580876 0.618514   0.72971091 0.51300722 0.51300722
 0.72971091 0.51300722 0.618514   0.54580876 0.618514   0.54580876
 0.618514   0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.51300722 0.54580876 0.54580876 0.51300722 0.54580876
 0.618514   0.54580876 0.54580876 0.54580876 0.72971091 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.51300722 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.618514   0.72971091 0.54580876 0.54580876 0.54580876
 0.54580876 0.51300722 0.54580876 0.54580876 0.54580876 0.618514
 0.54580876 0.54580876 0.51300722 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.618514   0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.51300722 0.54580876
 0.54580876 0.54580876 0.54580876 0.72971091 0.54580876 0.54580876
 0.618514   0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.72971091 0.54580876 0.54580876 0.618514   0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.51300722 0.54580876 0.54580876 0.54580876 0.72971091
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.72971091 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.51300722 0.54580876 0.54580876 0.54580876 0.72971091 0.54580876
 0.54580876 0.51300722 0.54580876 0.54580876 0.51300722 0.54580876
 0.618514   0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.618514
 0.54580876 0.54580876 0.54580876 0.54580876 0.72971091 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876 0.54580876
 0.54580876 0.54580876]","[OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 2)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 1), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 1), ('p', 2)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 1), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)]), OrderedDict([('leaf_size', 2), ('n_neighbors', 2), ('p', 1)])]"
3,svm,"[-0.89591962 -0.89592044 -0.89544038 -0.8952202  -0.89592057 -0.89756534
 -0.89591924 -0.89564151 -0.89591666 -0.8959206  -0.91348159 -0.77228811
 -0.89519711 -0.89592062 -0.77677908 -0.77867611 -0.76196784 -0.75105307
 -0.89588425 -0.89589421 -1.0540908  -0.89580594 -0.89581431 -0.89583342
 -0.89591039 -0.89591258 -0.89590258 -0.76360808 -0.8953754  -0.89565021
 -0.89573776 -0.89567285 -0.75199405 -0.89592062 -0.8959206  -0.89592062
 -0.75804021 -0.89744376 -0.91210567 -0.89592062 -0.76291631 -0.77089891
 -0.76988562 -0.77034336 -0.76649702 -0.91348755 -0.9221292  -0.77622224
 -0.75145712 -0.91119828 -0.90955692 -1.13213399 -0.75578596 -0.75787416
 -0.74719453 -0.73607824 -0.89592018 -0.89592006 -0.74052334 -0.89592013
 -0.91855439 -0.89530298 -0.89667327 -0.89524975 -0.75121778 -1.0015266
 -0.89591877 -0.89591889 -0.75175414 -0.72034407 -0.90152233 -0.90222403
 -0.94879676 -0.94848745 -0.9487314  -0.94019415 -0.89592061 -0.89592061
 -0.89592061 -0.89592061 -0.89592053 -0.89592052 -0.89592052 -0.89592054
 -0.75229269 -0.75229159 -0.89586247 -0.89587054 -0.75228706 -0.75228239
 -0.89584503 -0.75228463 -0.72222437 -1.02385854 -1.14695425 -1.0356336
 -0.7201884  -0.72025473 -0.73746437 -0.89552852 -0.75025413 -0.75231633
 -0.89592034 -0.75070248 -0.89901697 -0.93835073 -0.90876388 -0.89945273
 -0.74799194 -0.75231635 -0.75231638 -0.72026749 -0.73929752 -0.94751799
 -1.00446304 -0.91296399 -1.13640576 -0.76868076 -1.02266353 -0.97987332
 -0.75231639 -0.89592049 -0.89592049 -0.89592049 -0.75231636 -0.75231637
 -0.75231637 -0.75231636 -0.89592058 -0.89592059 -0.89592058 -0.89592058
 -0.75228946 -0.75228951 -0.75228952 -0.89591789 -0.89555345 -0.89554954
 -0.89553033 -0.89556601 -0.75231411 -0.75231401 -0.89591473 -0.75231413
 -0.75231361 -0.7523137  -0.75231338 -0.75231299 -0.75231644 -0.75231644
 -0.75231644 -0.75231644 -0.75231644 -0.75231644 -0.75231644 -0.75231644
 -0.75231644 -0.75231644 -0.75231644 -0.75231644 -0.89592036 -0.75231644
 -0.75231634 -0.75227751 -0.89591265 -0.89591315 -0.89591288 -0.89591368
 -0.75683482 -0.89584064 -0.89584038 -0.89585058 -0.7551094  -0.89592048
 -0.89592046 -0.75613464 -1.04953443 -1.05771681 -1.01948038 -1.03905942
 -0.75231235 -0.75231247 -0.75335613 -0.9178555  -0.76523077 -1.09023459
 -1.06998687 -0.79400188 -0.76708925 -0.76791216 -1.04399035 -1.06383299
 -0.75231636 -0.75231168 -0.7523119  -0.7523113  -0.75231057 -0.75231082
 -0.89590685 -0.89590549 -0.89592041 -0.89592042 -0.89592041 -0.89592041
 -0.89591009 -0.89591006 -0.89591051 -0.89591052 -0.75227193 -0.7522734
 -0.7522734  -0.75226841 -0.75226309 -0.75225821 -0.89579097 -0.75225272
 -0.75231631 -0.7523163  -0.89578318 -0.75231631 -0.89590722 -0.89590712
 -0.89590882 -0.89590803 -0.89592062 -0.89592062 -0.89592062 -0.89592062
 -1.03871566 -1.03875753 -1.005966   -1.02833576 -1.03191828 -1.0339163
 -1.00034277 -0.99987282 -0.7343055  -1.07168038 -1.27754456 -1.23985457
 -0.74219111 -0.73499818 -0.74299043 -1.01268325 -1.11302688 -1.42330767
 -1.02105964 -1.01142007 -1.35457618 -0.70586051 -0.73438634 -1.09042898
 -1.00777153 -0.77880923 -0.89591222 -0.77881649 -0.89592062 -0.89555069
 -0.97355048 -0.89592061 -0.89592062 -0.89592062 -0.89592049 -0.89592062
 -0.89592062 -0.8951949  -0.96045939 -0.89592014 -0.89592062 -0.89591027
 -1.02112649 -0.89591652 -0.89592062 -0.89592062 -0.89575605 -0.89591828
 -0.89592062 -0.89592062 -0.8958818  -0.89592062 -0.74392785 -0.89519511
 -0.74390233 -0.74390967 -0.89592062 -0.89592062 -0.89532472 -0.89540879
 -0.89592062 -0.89592054 -0.89592062 -0.89592062 -0.89592062 -0.89592062
 -0.89592062 -0.89592062 -0.74281283 -0.7428782  -0.74271452 -0.74259822
 -1.04303062 -0.74820384 -0.74818461 -0.74816206 -0.89592062 -0.89592062
 -0.89592062 -0.89592062 -0.89592062 -0.89592062 -0.89592062 -0.89592062
 -0.74295141 -0.74291805 -0.74288034 -0.74283448 -0.74291381 -0.89592062
 -0.89592062 -0.89592019 -0.74196357 -0.74196108 -0.74195889 -0.74205701
 -0.7423263  -0.74228748 -0.7422508  -0.74191032 -0.77837258 -0.77866857
 -0.77852617 -1.31206909 -0.89592018 -0.8359327  -0.89592016 -0.88824834
 -0.75231619 -0.89591997 -0.89591998 -1.05302268 -0.75912005 -0.75910915
 -0.75905168 -0.75905879 -0.74247114 -0.74245302 -0.74243259 -0.75851782
 -0.7523164  -0.74254621 -0.74254267 -0.74253622 -0.89592053 -0.89592053
 -0.89592053 -0.89592062 -0.74215935 -0.89592062 -0.89592062 -0.89592062
 -0.7523164  -0.75083751 -0.75085407 -0.90047721 -0.75229652 -0.89489893
 -0.89699632 -0.89587928 -1.08384916 -0.75230822 -0.89589921 -0.89589534
 -0.75231454 -0.89591634 -0.89591576 -0.85894422 -0.77438889 -0.77470805
 -0.89592062 -0.89592062 -0.72272169 -1.0111752  -1.02565391 -1.01933502
 -0.77700267 -0.74179317 -0.74175417 -0.75843422 -0.75375323 -0.75093686
 -0.75090774 -0.88963185 -0.75117364 -0.75137204 -0.89555544 -0.89558887
 -0.75156169 -0.8952768  -0.8951982  -0.89522614 -0.89592062 -0.89592062
 -0.89592062 -0.75107972 -0.74178153 -0.77034294 -0.77035603 -0.77033847
 -0.75145479 -0.75223058 -0.75223455 -0.88822309 -0.75459218 -1.33887595
 -0.89591235 -0.89591239 -0.8960035  -0.89590398 -0.89600064 -0.89617725
 -0.89592028 -0.89592028 -0.89592026 -0.89592027 -0.89592061 -0.75231643
 -0.89592061 -0.75839641 -0.74181412 -0.73280786 -0.73280071 -0.73279364
 -0.89592061 -0.89592062 -0.89592062 -0.89592062 -0.73327834 -0.89591982
 -0.89591983 -0.89591974 -0.73336563 -0.73348105 -0.73355052 -0.73357499
 -0.73257696 -0.7323896  -0.73239477 -0.73232027 -0.73327344 -0.73321798
 -0.73372837 -0.733235   -0.73260301 -0.73232826 -0.73245662 -0.73233283
 -0.73302644 -0.73314348 -0.89592062 -0.89592062 -0.73292847 -0.73207707
 -0.72968261 -0.73173503 -1.01608342 -1.03432279 -1.01250863 -0.95802075
 -0.72652879 -0.72716751 -1.34596967 -0.89592061 -0.89592056 -0.75231641
 -0.89592055 -0.89592055 -0.8959206  -0.8959206  -0.8959206  -0.75231643
 -0.75222099 -0.75222099 -0.8957069  -0.89569903 -0.89521272 -0.75184507
 -0.89520493 -0.89521107 -0.75231642 -0.75231642 -0.75231642 -0.89592057
 -0.75105307 -0.7523152  -0.89591737 -0.89591742 -0.90520275 -0.90522319
 -0.75230348 -0.90522725]","[0.66077651 0.66077662 0.66051056 0.65967475 0.66077664 0.65741269
 0.66077645 0.66066591 0.66077603 0.66077664 0.65398595 0.71759992
 0.65984657 0.66077664 0.71160926 0.70917157 0.74796088 0.94943455
 0.66076892 0.66077137 0.76495258 0.66074421 0.66074726 0.66075387
 0.66077488 0.6607753  0.66077327 0.7434374  0.66043727 0.66067095
 0.66071606 0.66068362 0.92709565 0.66077664 0.66077664 0.66077664
 0.92627381 0.65748003 0.65406605 0.66077664 0.74571531 0.72102358
 0.72440232 0.72275547 0.73410735 0.65398661 0.65390465 0.69831391
 0.92711859 0.65413349 0.65429284 0.85487853 0.76194807 0.75754442
 0.78346309 0.80116402 0.66077659 0.66077657 0.79453202 0.66077658
 0.65384484 0.65942314 0.65796877 0.66021595 0.7738905  0.67207615
 0.66077638 0.6607764  0.92709896 0.84252727 0.65582153 0.65562196
 0.6569347  0.65690405 0.65692602 0.65557143 0.66077664 0.66077664
 0.66077664 0.66077664 0.66077663 0.66077663 0.66077663 0.66077663
 0.92754743 0.92754743 0.66076295 0.66076526 0.92754743 0.92754745
 0.66075764 0.92754744 0.82960851 0.68943595 0.86824747 0.71234684
 0.84608434 0.84409044 0.79908066 0.65903505 0.77637306 0.92754784
 0.66077661 0.77521677 0.65671124 0.65531031 0.65439373 0.6565355
 0.78166073 0.92754784 0.92754785 0.84794348 0.79633624 0.65672694
 0.67353499 0.65400582 0.85817514 0.92836567 0.68589826 0.68297318
 0.92754785 0.66077663 0.66077663 0.66077663 0.92754785 0.92754785
 0.92754785 0.92754785 0.66077664 0.66077664 0.66077664 0.66077664
 0.92754743 0.92754743 0.92754743 0.66077624 0.66060772 0.66060489
 0.6605902  0.66061684 0.92754776 0.92754775 0.6607757  0.92754776
 0.92754774 0.92754774 0.92754773 0.92754772 0.92754785 0.92754785
 0.92754785 0.92754785 0.92754785 0.92754785 0.92754785 0.92754785
 0.92754785 0.92754785 0.92754785 0.92754785 0.66077661 0.92754785
 0.92754784 0.9275475  0.66077532 0.66077541 0.66077536 0.66077551
 0.75976935 0.66075624 0.66075616 0.66075938 0.92695214 0.66077663
 0.66077662 0.9265885  0.7544537  0.77398995 0.68439446 0.72242135
 0.9275477  0.9275477  0.9271986  0.65384942 0.73806017 0.82805668
 0.81058243 0.55516153 0.73236746 0.72997197 0.73853664 0.79957909
 0.92754785 0.92754768 0.92754769 0.92754767 0.92754765 0.92754766
 0.66077417 0.66077389 0.66077662 0.66077662 0.66077662 0.66077662
 0.66077482 0.66077482 0.66077491 0.66077491 0.92754757 0.92754755
 0.92754755 0.92754763 0.92754773 0.92754784 0.66073853 0.92754799
 0.92754784 0.92754784 0.66073546 0.92754784 0.66077425 0.66077423
 0.66077457 0.66077441 0.66077664 0.66077664 0.66077664 0.66077664
 0.72133088 0.72148017 0.6743412  0.69619371 0.70305493 0.70751032
 0.67155988 0.67138401 0.80382727 0.81195631 0.84793969 0.84335558
 0.79206235 0.80279076 0.79085061 0.67857998 0.85068534 0.95459349
 0.68600599 0.67775612 0.97775861 0.55666722 0.53712966 0.82829271
 0.67533639 0.70669121 0.66077524 0.70681443 0.66077664 0.66060574
 0.66250556 0.66077664 0.66077664 0.66077664 0.66077663 0.66077664
 0.66077664 0.65991803 0.65932703 0.66077658 0.66077664 0.66077486
 0.68614082 0.66077601 0.66077664 0.66077664 0.66072416 0.6607763
 0.66077664 0.66077664 0.66076829 0.66077664 0.78943218 0.65993339
 0.78947075 0.78945966 0.66077664 0.66077664 0.66036611 0.65921628
 0.66077664 0.66077663 0.66077664 0.66077664 0.66077664 0.66077664
 0.66077664 0.66077664 0.79111966 0.79102062 0.79126865 0.79144492
 0.73529369 0.66304571 0.66301863 0.66298688 0.66077664 0.66077664
 0.66077664 0.66077664 0.66077664 0.66077664 0.66077664 0.66077664
 0.79090971 0.79096024 0.79101738 0.79108686 0.79096667 0.66077664
 0.66077664 0.66077659 0.79240767 0.79241145 0.79241477 0.79226585
 0.79185725 0.79191614 0.79197178 0.79248852 0.70366763 0.70489659
 0.70425116 0.86331115 0.66077659 0.71959627 0.66077658 0.66528024
 0.92754784 0.66077656 0.66077656 0.76264527 0.75467799 0.7547035
 0.75483811 0.75482146 0.7916376  0.79166507 0.79169606 0.7561096
 0.92754785 0.79152377 0.79152914 0.79153892 0.66077663 0.66077663
 0.66077663 0.66077664 0.79211053 0.66077664 0.66077664 0.66077664
 0.92754785 0.9272679  0.92727151 0.65615685 0.92754745 0.66210101
 0.66122255 0.66076763 0.82211749 0.9275476  0.66077252 0.66077164
 0.92754777 0.66077598 0.66077588 0.69017771 0.69490906 0.69547388
 0.66077664 0.66077664 0.82796541 0.67753314 0.69188838 0.68428002
 0.71150696 0.79266639 0.79272562 0.75629568 0.76688747 0.92731097
 0.92730024 0.66245016 0.92738789 0.92744838 0.65899758 0.65895072
 0.92750407 0.6594891  0.65981697 0.65964868 0.66077664 0.66077664
 0.66077664 0.9273582  0.79268406 0.72271508 0.72272124 0.72273152
 0.92747285 0.92754877 0.92754861 0.66513898 0.76447574 0.88256308
 0.66077526 0.66077527 0.65850671 0.6586029  0.6585091  0.65835274
 0.6607766  0.6607766  0.6607766  0.6607766  0.66077664 0.92754785
 0.66077664 0.75637987 0.79263458 0.64485905 0.64486048 0.64487908
 0.66077664 0.66077664 0.66077664 0.66077664 0.64535099 0.66077653
 0.66077654 0.66077652 0.64542275 0.64552747 0.64559371 0.64562898
 0.6446522  0.64447496 0.64447504 0.64440476 0.64531442 0.64531674
 0.64574603 0.64531663 0.64469979 0.64442014 0.64450489 0.64442811
 0.64511048 0.64519103 0.66077664 0.66077664 0.64504227 0.64415057
 0.64185119 0.64385714 0.68122102 0.70887969 0.67844509 0.65875996
 0.63806189 0.63884565 0.88937218 0.66077664 0.66077664 0.92754785
 0.66077663 0.66077664 0.66077664 0.66077664 0.66077664 0.92754785
 0.9275492  0.9275492  0.66070136 0.6606974  0.66009461 0.92758313
 0.66004986 0.66008564 0.92754785 0.92754785 0.92754785 0.66077664
 0.94943455 0.9275478  0.66077615 0.66077616 0.65493593 0.65493219
 0.92754752 0.65493122]","[OrderedDict([('C', 13.027794916780016), ('gamma', 656.1618477292451)]), OrderedDict([('C', 976.8835637681651), ('gamma', 760.2215609460725)]), OrderedDict([('C', 684.0341062024534), ('gamma', 249.02285575723587)]), OrderedDict([('C', 806.9898595862129), ('gamma', 176.25781362665452)]), OrderedDict([('C', 16.889091026268684), ('gamma', 831.5586850638031)]), OrderedDict([('C', 363.839272996553), ('gamma', 115.55285938660192)]), OrderedDict([('C', 827.0123439999996), ('gamma', 636.3446995408411)]), OrderedDict([('C', 16.181917089661265), ('gamma', 293.7177068161827)]), OrderedDict([('C', 183.16591592016195), ('gamma', 571.5878844763206)]), OrderedDict([('C', 532.1693302635441), ('gamma', 902.8047755120591)]), OrderedDict([('C', 104.09698611672503), ('gamma', 63.060004060628714)]), OrderedDict([('C', 582.4484202453832), ('gamma', 0.0001)]), OrderedDict([('C', 592.3901551719282), ('gamma', 185.07605281179622)]), OrderedDict([('C', 587.3661808235069), ('gamma', 1000.0)]), OrderedDict([('C', 614.4824811814012), ('gamma', 0.0001)]), OrderedDict([('C', 630.804293764591), ('gamma', 0.0001)]), OrderedDict([('C', 457.4560380938057), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 0.0001)]), OrderedDict([('C', 999.7744535660045), ('gamma', 432.59618160320485)]), OrderedDict([('C', 52.90998096305644), ('gamma', 453.0543155613699)]), OrderedDict([('C', 127.1500186305834), ('gamma', 8.699293939850067)]), OrderedDict([('C', 1000.0), ('gamma', 357.0028046722353)]), OrderedDict([('C', 667.0572189150905), ('gamma', 362.13941113602016)]), OrderedDict([('C', 1000.0), ('gamma', 375.4432910967575)]), OrderedDict([('C', 976.9046928937177), ('gamma', 512.7646744332687)]), OrderedDict([('C', 974.1909300196868), ('gamma', 527.7962737985168)]), OrderedDict([('C', 972.7398293907354), ('gamma', 477.17854323244234)]), OrderedDict([('C', 475.7786124905779), ('gamma', 0.0001)]), OrderedDict([('C', 464.1354456338189), ('gamma', 236.6790968901143)]), OrderedDict([('C', 576.7965986542927), ('gamma', 296.1071376477361)]), OrderedDict([('C', 503.11638381558294), ('gamma', 324.6681290571039)]), OrderedDict([('C', 544.5302819077918), ('gamma', 302.6430436939458)]), OrderedDict([('C', 0.1), ('gamma', 71.95930684541412)]), OrderedDict([('C', 265.6784658759236), ('gamma', 1000.0)]), OrderedDict([('C', 305.9838859660569), ('gamma', 878.4299056166142)]), OrderedDict([('C', 330.23639831363664), ('gamma', 986.6098207747694)]), OrderedDict([('C', 0.1), ('gamma', 34.97036298353938)]), OrderedDict([('C', 31.839336520408075), ('gamma', 116.75038314332195)]), OrderedDict([('C', 26.30359740363314), ('gamma', 65.1621844220317)]), OrderedDict([('C', 812.9709309842776), ('gamma', 1000.0)]), OrderedDict([('C', 466.5056476666262), ('gamma', 0.0001)]), OrderedDict([('C', 567.673229575562), ('gamma', 0.0001)]), OrderedDict([('C', 553.1416238630666), ('gamma', 0.0001)]), OrderedDict([('C', 560.1920489449853), ('gamma', 0.0001)]), OrderedDict([('C', 512.7888919093672), ('gamma', 0.0001)]), OrderedDict([('C', 510.5869294825488), ('gamma', 63.04941826920464)]), OrderedDict([('C', 527.587532854427), ('gamma', 52.80228224577902)]), OrderedDict([('C', 688.9468525038), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 80.09011258118291)]), OrderedDict([('C', 675.5592043996145), ('gamma', 66.66126813611454)]), OrderedDict([('C', 709.1051385840337), ('gamma', 69.56646053211804)]), OrderedDict([('C', 757.0805684826931), ('gamma', 4.369702242634237)]), OrderedDict([('C', 404.689352531013), ('gamma', 0.0001)]), OrderedDict([('C', 420.6299483633843), ('gamma', 0.0001)]), OrderedDict([('C', 337.51292122683844), ('gamma', 0.0001)]), OrderedDict([('C', 285.69979879780067), ('gamma', 0.0001)]), OrderedDict([('C', 989.5252650450127), ('gamma', 706.1565507632661)]), OrderedDict([('C', 993.7666796151938), ('gamma', 691.601336287002)]), OrderedDict([('C', 303.72807116388), ('gamma', 0.0001)]), OrderedDict([('C', 255.30010440985825), ('gamma', 698.8551600030029)]), OrderedDict([('C', 274.6509102982513), ('gamma', 56.5495715867259)]), OrderedDict([('C', 234.31320954935703), ('gamma', 165.4564399129652)]), OrderedDict([('C', 247.59309533553002), ('gamma', 125.9753611855912)]), OrderedDict([('C', 177.40345080616981), ('gamma', 211.1211605330955)]), OrderedDict([('C', 366.85846917938704), ('gamma', 0.0001)]), OrderedDict([('C', 372.8346260583921), ('gamma', 19.007017947715287)]), OrderedDict([('C', 519.9082965321426), ('gamma', 618.4405608654138)]), OrderedDict([('C', 539.7703839617975), ('gamma', 622.6213046297333)]), OrderedDict([('C', 0.1), ('gamma', 75.20911123967919)]), OrderedDict([('C', 198.72365908516392), ('gamma', 0.0001)]), OrderedDict([('C', 344.1109152035732), ('gamma', 91.4661345125777)]), OrderedDict([('C', 252.6967521844298), ('gamma', 88.70287448928663)]), OrderedDict([('C', 332.39099523863104), ('gamma', 35.44716633495291)]), OrderedDict([('C', 720.9224044531644), ('gamma', 35.58088167749415)]), OrderedDict([('C', 539.4518319382332), ('gamma', 35.474925505644926)]), OrderedDict([('C', 1000.0), ('gamma', 39.72928238661566)]), OrderedDict([('C', 1000.0), ('gamma', 945.7321839104485)]), OrderedDict([('C', 653.8535589394514), ('gamma', 945.3763267126168)]), OrderedDict([('C', 842.4371672798097), ('gamma', 939.4715846404598)]), OrderedDict([('C', 267.67140456632916), ('gamma', 936.3878990480688)]), OrderedDict([('C', 1000.0), ('gamma', 799.2958924547381)]), OrderedDict([('C', 556.8366465173218), ('gamma', 796.2234227243573)]), OrderedDict([('C', 853.3021758463365), ('gamma', 793.276688078955)]), OrderedDict([('C', 628.3999134419564), ('gamma', 806.9233244250801)]), OrderedDict([('C', 0.1), ('gamma', 403.5365061791821)]), OrderedDict([('C', 0.1), ('gamma', 400.67169736634895)]), OrderedDict([('C', 444.6231028709302), ('gamma', 402.1956432747417)]), OrderedDict([('C', 394.62459622323195), ('gamma', 411.9302313897654)]), OrderedDict([('C', 0.1), ('gamma', 390.0383455508268)]), OrderedDict([('C', 0.1), ('gamma', 380.63643403217884)]), OrderedDict([('C', 140.85195870839289), ('gamma', 384.93721614177286)]), OrderedDict([('C', 0.1), ('gamma', 384.9860235929968)]), OrderedDict([('C', 225.34487106359873), ('gamma', 0.0001)]), OrderedDict([('C', 216.31240122668981), ('gamma', 14.193176201221664)]), OrderedDict([('C', 211.2126144874896), ('gamma', 3.9548835905533664)]), OrderedDict([('C', 235.54254132536315), ('gamma', 11.575487300131115)]), OrderedDict([('C', 191.20953681000717), ('gamma', 0.0001)]), OrderedDict([('C', 195.40170778854744), ('gamma', 0.0001)]), OrderedDict([('C', 291.2435464571754), ('gamma', 0.0001)]), OrderedDict([('C', 296.26709253116894), ('gamma', 152.10637441733732)]), OrderedDict([('C', 359.2154498227619), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 733.2339005650264)]), OrderedDict([('C', 569.7696116450462), ('gamma', 732.8434085459064)]), OrderedDict([('C', 362.7715051141131), ('gamma', 0.0001)]), OrderedDict([('C', 194.90428477052598), ('gamma', 104.2024994085098)]), OrderedDict([('C', 196.85005436830113), ('gamma', 40.7789032955154)]), OrderedDict([('C', 191.77199245588497), ('gamma', 71.07792418231851)]), OrderedDict([('C', 412.5589941696957), ('gamma', 101.49999943897255)]), OrderedDict([('C', 342.93188731372067), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 743.3804678737454)]), OrderedDict([('C', 0.1), ('gamma', 772.218499011328)]), OrderedDict([('C', 187.45061788702077), ('gamma', 0.0001)]), OrderedDict([('C', 298.5676725589368), ('gamma', 0.0001)]), OrderedDict([('C', 298.79538859183464), ('gamma', 36.013422840140606)]), OrderedDict([('C', 298.97082132045244), ('gamma', 18.342579019668555)]), OrderedDict([('C', 622.6121281270193), ('gamma', 63.845238216695186)]), OrderedDict([('C', 188.99255359120053), ('gamma', 4.238969959032876)]), OrderedDict([('C', 0.1), ('gamma', 15.208924738099055)]), OrderedDict([('C', 3.136233753574299), ('gamma', 14.677467582837691)]), OrderedDict([('C', 2.0744547571201264), ('gamma', 20.581186254226086)]), OrderedDict([('C', 0.1), ('gamma', 779.8750006622296)]), OrderedDict([('C', 740.0965724687468), ('gamma', 777.4788846178875)]), OrderedDict([('C', 311.2730453772213), ('gamma', 777.614144057234)]), OrderedDict([('C', 426.7727589359778), ('gamma', 779.863646487259)]), OrderedDict([('C', 0.1), ('gamma', 752.0875202136136)]), OrderedDict([('C', 0.1), ('gamma', 759.3889450851829)]), OrderedDict([('C', 0.1), ('gamma', 764.6999896849376)]), OrderedDict([('C', 0.1), ('gamma', 756.8124896658021)]), OrderedDict([('C', 1000.0), ('gamma', 854.1855141948057)]), OrderedDict([('C', 1000.0), ('gamma', 856.8017590520357)]), OrderedDict([('C', 866.0385382957173), ('gamma', 855.0175878193257)]), OrderedDict([('C', 752.9457855218941), ('gamma', 855.969696401651)]), OrderedDict([('C', 0.1), ('gamma', 395.45722939469175)]), OrderedDict([('C', 0.1), ('gamma', 395.58041876002346)]), OrderedDict([('C', 0.1), ('gamma', 395.6000721884956)]), OrderedDict([('C', 1000.0), ('gamma', 594.4205120068824)]), OrderedDict([('C', 1000.0), ('gamma', 272.18980191411765)]), OrderedDict([('C', 450.82213857548015), ('gamma', 271.3446594110501)]), OrderedDict([('C', 807.095597810522), ('gamma', 267.16769925590756)]), OrderedDict([('C', 696.6363882914387), ('gamma', 275.00789107559166)]), OrderedDict([('C', 0.1), ('gamma', 547.8495574796974)]), OrderedDict([('C', 0.1), ('gamma', 545.3291184249256)]), OrderedDict([('C', 210.84161046768378), ('gamma', 547.1289255432229)]), OrderedDict([('C', 0.1), ('gamma', 548.4652185807067)]), OrderedDict([('C', 0.1), ('gamma', 535.8926255713687)]), OrderedDict([('C', 0.1), ('gamma', 537.980942840272)]), OrderedDict([('C', 0.1), ('gamma', 531.0965291446274)]), OrderedDict([('C', 0.1), ('gamma', 523.6736268454584)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 6.281878865478055), ('gamma', 738.1553678340039)]), OrderedDict([('C', 0.1), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 738.4526943000852)]), OrderedDict([('C', 0.1), ('gamma', 372.06796605245466)]), OrderedDict([('C', 7.177212084597741), ('gamma', 528.3535615284355)]), OrderedDict([('C', 7.573896353983182), ('gamma', 532.3641746897184)]), OrderedDict([('C', 10.48356842723441), ('gamma', 530.1283615872089)]), OrderedDict([('C', 9.992170945758504), ('gamma', 536.9428549776403)]), OrderedDict([('C', 412.5061930353682), ('gamma', 0.0001)]), OrderedDict([('C', 12.748398331813606), ('gamma', 381.19889690660074)]), OrderedDict([('C', 9.208322990261099), ('gamma', 380.979020597392)]), OrderedDict([('C', 11.232833343446748), ('gamma', 389.9766943008352)]), OrderedDict([('C', 0.1), ('gamma', 47.52634844997205)]), OrderedDict([('C', 10.37398977288884), ('gamma', 774.6459428230534)]), OrderedDict([('C', 10.400301026983497), ('gamma', 766.323210259506)]), OrderedDict([('C', 0.1), ('gamma', 42.06172271250854)]), OrderedDict([('C', 341.1065198860571), ('gamma', 9.151157244132436)]), OrderedDict([('C', 349.0728669029329), ('gamma', 8.32612662592228)]), OrderedDict([('C', 345.9888216975249), ('gamma', 15.118295534669713)]), OrderedDict([('C', 413.07417879465805), ('gamma', 10.830825616021727)]), OrderedDict([('C', 0.1), ('gamma', 513.2848776833478)]), OrderedDict([('C', 0.1), ('gamma', 515.0980693139911)]), OrderedDict([('C', 0.1), ('gamma', 59.37526833381985)]), OrderedDict([('C', 6.814256159993238), ('gamma', 57.34724964652724)]), OrderedDict([('C', 496.9367983347814), ('gamma', 0.0001)]), OrderedDict([('C', 502.0895781057269), ('gamma', 5.894548311794215)]), OrderedDict([('C', 492.8714226385649), ('gamma', 6.994743151809836)]), OrderedDict([('C', 488.1526423318631), ('gamma', 0.172274179863949)]), OrderedDict([('C', 519.8395145836722), ('gamma', 0.0001)]), OrderedDict([('C', 529.6365799478466), ('gamma', 0.0001)]), OrderedDict([('C', 528.4252288870559), ('gamma', 9.887289841527009)]), OrderedDict([('C', 539.4163769688428), ('gamma', 7.457528141770167)]), OrderedDict([('C', 0.1), ('gamma', 749.9351213213603)]), OrderedDict([('C', 0.1), ('gamma', 503.91904299427483)]), OrderedDict([('C', 0.1), ('gamma', 506.81033926935345)]), OrderedDict([('C', 0.1), ('gamma', 499.1307947082519)]), OrderedDict([('C', 0.1), ('gamma', 490.90972461135107)]), OrderedDict([('C', 0.1), ('gamma', 493.5520908830577)]), OrderedDict([('C', 444.682158648926), ('gamma', 494.1756172866371)]), OrderedDict([('C', 284.76835894569393), ('gamma', 488.24696801134394)]), OrderedDict([('C', 358.89709435363443), ('gamma', 750.5696161119907)]), OrderedDict([('C', 307.37738810416533), ('gamma', 752.9454378026074)]), OrderedDict([('C', 260.29833888642275), ('gamma', 751.1527687160378)]), OrderedDict([('C', 262.2386248183848), ('gamma', 751.0713326075)]), OrderedDict([('C', 201.26633810188878), ('gamma', 510.9445391493328)]), OrderedDict([('C', 198.7365202782503), ('gamma', 510.750609448465)]), OrderedDict([('C', 221.78211282475436), ('gamma', 513.4850182745795)]), OrderedDict([('C', 222.82339281553482), ('gamma', 513.5795298650423)]), OrderedDict([('C', 0.1), ('gamma', 363.4654010053757)]), OrderedDict([('C', 0.1), ('gamma', 365.6200147475015)]), OrderedDict([('C', 0.1), ('gamma', 365.6262487592963)]), OrderedDict([('C', 0.1), ('gamma', 358.5647788965898)]), OrderedDict([('C', 0.1), ('gamma', 351.7570930875021)]), OrderedDict([('C', 0.1), ('gamma', 346.0802017757956)]), OrderedDict([('C', 180.4259358507879), ('gamma', 348.62360680310564)]), OrderedDict([('C', 0.1), ('gamma', 340.2101004577043)]), OrderedDict([('C', 0.1), ('gamma', 724.5665079985272)]), OrderedDict([('C', 0.1), ('gamma', 719.5879911602175)]), OrderedDict([('C', 7.250673858331348), ('gamma', 344.60827866848786)]), OrderedDict([('C', 0.1), ('gamma', 723.5059986678028)]), OrderedDict([('C', 10.59959978887767), ('gamma', 495.90680506158736)]), OrderedDict([('C', 7.515107503329308), ('gamma', 495.4274429673891)]), OrderedDict([('C', 10.002610253587799), ('gamma', 503.83926085832735)]), OrderedDict([('C', 8.962934948041179), ('gamma', 499.79109122088477)]), OrderedDict([('C', 7.246082056946795), ('gamma', 999.4837694970416)]), OrderedDict([('C', 6.390848506045843), ('gamma', 996.5288713736676)]), OrderedDict([('C', 9.791020171263845), ('gamma', 997.1419330025935)]), OrderedDict([('C', 11.206890369661924), ('gamma', 986.4077276749668)]), OrderedDict([('C', 460.5605594812876), ('gamma', 10.903122996671492)]), OrderedDict([('C', 452.66663768443635), ('gamma', 10.893579707706694)]), OrderedDict([('C', 456.2202583937392), ('gamma', 18.01242870320173)]), OrderedDict([('C', 456.32201790406236), ('gamma', 13.219942828183664)]), OrderedDict([('C', 575.6279802437605), ('gamma', 12.433228917750647)]), OrderedDict([('C', 583.3114232025104), ('gamma', 11.991729872936308)]), OrderedDict([('C', 580.0223829144354), ('gamma', 19.262764420420226)]), OrderedDict([('C', 589.0765665638179), ('gamma', 19.359955698329415)]), OrderedDict([('C', 278.6458136353737), ('gamma', 0.0001)]), OrderedDict([('C', 277.0018479765916), ('gamma', 6.902065309198265)]), OrderedDict([('C', 270.7942351154103), ('gamma', 2.876208031975011)]), OrderedDict([('C', 275.11145076645084), ('gamma', 3.1504718694040665)]), OrderedDict([('C', 311.14265746562), ('gamma', 0.0001)]), OrderedDict([('C', 281.3801739230572), ('gamma', 0.0001)]), OrderedDict([('C', 314.81911907773593), ('gamma', 0.0001)]), OrderedDict([('C', 282.0123477031121), ('gamma', 16.557860207935633)]), OrderedDict([('C', 622.5952006965642), ('gamma', 4.923074302805373)]), OrderedDict([('C', 622.5692928871811), ('gamma', 2.0899561084325597)]), OrderedDict([('C', 629.1857949498644), ('gamma', 14.79800179102573)]), OrderedDict([('C', 621.3670882829446), ('gamma', 16.82377770159106)]), OrderedDict([('C', 611.8702061970739), ('gamma', 0.4837372396747847)]), OrderedDict([('C', 636.7754264068012), ('gamma', 0.058414338144661626)]), OrderedDict([('C', 633.9380003352055), ('gamma', 0.08703109101882447)]), OrderedDict([('C', 612.6232682385262), ('gamma', 5.885062623473354)]), OrderedDict([('C', 641.736286409117), ('gamma', 17.624449125843974)]), OrderedDict([('C', 641.645993098806), ('gamma', 0.0001)]), OrderedDict([('C', 641.0318557221206), ('gamma', 525.0784117265408)]), OrderedDict([('C', 641.0008947791206), ('gamma', 0.0001)]), OrderedDict([('C', 918.709934590636), ('gamma', 977.5907516665919)]), OrderedDict([('C', 923.7258746266913), ('gamma', 271.59629058329784)]), OrderedDict([('C', 921.1590042024319), ('gamma', 26.277391162330055)]), OrderedDict([('C', 921.2515256796316), ('gamma', 955.6353766633745)]), OrderedDict([('C', 476.8145290192891), ('gamma', 1000.0)]), OrderedDict([('C', 477.1531768497815), ('gamma', 1000.0)]), OrderedDict([('C', 478.51689842080134), ('gamma', 778.330797459617)]), OrderedDict([('C', 476.4851038482371), ('gamma', 1000.0)]), OrderedDict([('C', 77.81315663897237), ('gamma', 986.0505071690914)]), OrderedDict([('C', 76.13070791162552), ('gamma', 189.2127246285613)]), OrderedDict([('C', 78.9013343858996), ('gamma', 30.656126248385664)]), OrderedDict([('C', 81.90589652266515), ('gamma', 700.3870194397166)]), OrderedDict([('C', 890.6000163871929), ('gamma', 982.1459236723932)]), OrderedDict([('C', 890.3428292931958), ('gamma', 512.0439274494964)]), OrderedDict([('C', 892.4008389729531), ('gamma', 14.775372408508781)]), OrderedDict([('C', 892.1765536281588), ('gamma', 569.4645634262446)]), OrderedDict([('C', 948.9765260590934), ('gamma', 964.7474077111747)]), OrderedDict([('C', 949.0240612135578), ('gamma', 1000.0)]), OrderedDict([('C', 949.1616763979204), ('gamma', 332.0796447707651)]), OrderedDict([('C', 947.8557926459052), ('gamma', 604.0318312605939)]), OrderedDict([('C', 786.1813987522486), ('gamma', 993.3943277742784)]), OrderedDict([('C', 786.4620881286423), ('gamma', 1000.0)]), OrderedDict([('C', 786.2658448824106), ('gamma', 428.4055912687827)]), OrderedDict([('C', 783.1207252634258), ('gamma', 1000.0)]), OrderedDict([('C', 319.13075287586213), ('gamma', 0.0001)]), OrderedDict([('C', 319.6220192821055), ('gamma', 190.1518825390883)]), OrderedDict([('C', 319.0133748510443), ('gamma', 0.0001)]), OrderedDict([('C', 319.0471346711804), ('gamma', 0.0001)]), OrderedDict([('C', 158.76498248769005), ('gamma', 965.6390753562204)]), OrderedDict([('C', 158.7296663694254), ('gamma', 1000.0)]), OrderedDict([('C', 158.74573743618419), ('gamma', 227.0180320669092)]), OrderedDict([('C', 155.65205637192778), ('gamma', 157.93656052430893)]), OrderedDict([('C', 402.7745502065794), ('gamma', 1000.0)]), OrderedDict([('C', 401.19312604254566), ('gamma', 808.4904679938563)]), OrderedDict([('C', 402.6449097994088), ('gamma', 1000.0)]), OrderedDict([('C', 402.7417906507677), ('gamma', 1000.0)]), OrderedDict([('C', 42.145513667657305), ('gamma', 1000.0)]), OrderedDict([('C', 42.14190875072793), ('gamma', 1000.0)]), OrderedDict([('C', 42.094360585757464), ('gamma', 1000.0)]), OrderedDict([('C', 41.12832601017595), ('gamma', 1000.0)]), OrderedDict([('C', 314.00225106399193), ('gamma', 0.0001)]), OrderedDict([('C', 314.30291012287057), ('gamma', 0.0001)]), OrderedDict([('C', 313.5500561056366), ('gamma', 0.0001)]), OrderedDict([('C', 313.0151820046179), ('gamma', 0.0001)]), OrderedDict([('C', 875.0172603308237), ('gamma', 10.05845812539958)]), OrderedDict([('C', 874.7918443820296), ('gamma', 0.0001)]), OrderedDict([('C', 874.9136872985333), ('gamma', 0.0001)]), OrderedDict([('C', 875.0565323487308), ('gamma', 0.0001)]), OrderedDict([('C', 63.454282000181685), ('gamma', 966.6868406622763)]), OrderedDict([('C', 63.3845822426816), ('gamma', 1000.0)]), OrderedDict([('C', 63.46137697413017), ('gamma', 1000.0)]), OrderedDict([('C', 63.52003438548676), ('gamma', 1000.0)]), OrderedDict([('C', 94.94183221567573), ('gamma', 1000.0)]), OrderedDict([('C', 95.03180427663209), ('gamma', 1000.0)]), OrderedDict([('C', 95.08202868052798), ('gamma', 1000.0)]), OrderedDict([('C', 95.14123161126889), ('gamma', 1000.0)]), OrderedDict([('C', 314.63965782227075), ('gamma', 0.0001)]), OrderedDict([('C', 314.48622385106995), ('gamma', 0.0001)]), OrderedDict([('C', 314.3127615714317), ('gamma', 0.0001)]), OrderedDict([('C', 314.1018190184611), ('gamma', 0.0001)]), OrderedDict([('C', 314.466698306717), ('gamma', 0.0001)]), OrderedDict([('C', 318.8756460929486), ('gamma', 1000.0)]), OrderedDict([('C', 317.9220865460835), ('gamma', 1000.0)]), OrderedDict([('C', 318.5283774134745), ('gamma', 707.1209488551855)]), OrderedDict([('C', 310.09610540461745), ('gamma', 0.0001)]), OrderedDict([('C', 310.084655732264), ('gamma', 0.0001)]), OrderedDict([('C', 310.0745950010212), ('gamma', 0.0001)]), OrderedDict([('C', 310.5258621829677), ('gamma', 0.0001)]), OrderedDict([('C', 311.764493730151), ('gamma', 0.0001)]), OrderedDict([('C', 311.58592734060323), ('gamma', 0.0001)]), OrderedDict([('C', 311.4172276774179), ('gamma', 0.0001)]), OrderedDict([('C', 309.8511661440622), ('gamma', 0.0001)]), OrderedDict([('C', 658.2292156750096), ('gamma', 0.0001)]), OrderedDict([('C', 651.5663766371492), ('gamma', 0.0001)]), OrderedDict([('C', 655.2355044955443), ('gamma', 0.0001)]), OrderedDict([('C', 657.3016520797318), ('gamma', 2.651589439651157)]), OrderedDict([('C', 13.680914573817036), ('gamma', 705.4894648372235)]), OrderedDict([('C', 0.8602636911676818), ('gamma', 698.8400199605978)]), OrderedDict([('C', 7.511426898020751), ('gamma', 703.1567262124724)]), OrderedDict([('C', 2.5262795280954924), ('gamma', 701.7422005520252)]), OrderedDict([('C', 0.1), ('gamma', 683.1715579047755)]), OrderedDict([('C', 14.313545778970255), ('gamma', 681.8729640112929)]), OrderedDict([('C', 8.297611101083119), ('gamma', 682.8207852371806)]), OrderedDict([('C', 618.0971999366495), ('gamma', 8.796090041699555)]), OrderedDict([('C', 431.33930683750543), ('gamma', 0.0001)]), OrderedDict([('C', 431.24247287715207), ('gamma', 0.0001)]), OrderedDict([('C', 430.73161418560414), ('gamma', 0.0001)]), OrderedDict([('C', 430.79479976000414), ('gamma', 0.0001)]), OrderedDict([('C', 312.4306477084242), ('gamma', 0.0001)]), OrderedDict([('C', 312.3473182730066), ('gamma', 0.0001)]), OrderedDict([('C', 312.25334246217636), ('gamma', 0.0001)]), OrderedDict([('C', 425.87656370844684), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 799.080479863078)]), OrderedDict([('C', 312.77593706284625), ('gamma', 0.0001)]), OrderedDict([('C', 312.759661948642), ('gamma', 0.0001)]), OrderedDict([('C', 312.72998922228925), ('gamma', 0.0001)]), OrderedDict([('C', 13.44917450249967), ('gamma', 799.453457552371)]), OrderedDict([('C', 28.650194446384962), ('gamma', 802.4242169912443)]), OrderedDict([('C', 24.385084326607313), ('gamma', 801.6476003785441)]), OrderedDict([('C', 26.72663919420407), ('gamma', 1000.0)]), OrderedDict([('C', 310.9966066529278), ('gamma', 0.0001)]), OrderedDict([('C', 434.3755263721312), ('gamma', 1000.0)]), OrderedDict([('C', 434.27530885591887), ('gamma', 1000.0)]), OrderedDict([('C', 434.27649820847114), ('gamma', 1000.0)]), OrderedDict([('C', 0.1), ('gamma', 790.7190526583275)]), OrderedDict([('C', 0.1), ('gamma', 100.0878840404162)]), OrderedDict([('C', 0.1), ('gamma', 96.96985742319032)]), OrderedDict([('C', 14.175809355031275), ('gamma', 96.09497597409472)]), OrderedDict([('C', 0.1), ('gamma', 414.66236622380006)]), OrderedDict([('C', 2.8867768669446474), ('gamma', 414.30931523310704)]), OrderedDict([('C', 2.9999474635056687), ('gamma', 425.4780258827123)]), OrderedDict([('C', 18.419652117644052), ('gamma', 424.3503081711713)]), OrderedDict([('C', 316.2095133614597), ('gamma', 6.220972418218572)]), OrderedDict([('C', 0.1), ('gamma', 469.98948384538505)]), OrderedDict([('C', 14.293820036132718), ('gamma', 466.3750875712546)]), OrderedDict([('C', 4.258441018983456), ('gamma', 455.8333064959948)]), OrderedDict([('C', 0.1), ('gamma', 560.5085835118235)]), OrderedDict([('C', 13.415010156550057), ('gamma', 566.8674152309172)]), OrderedDict([('C', 9.376597548254162), ('gamma', 559.0113798099147)]), OrderedDict([('C', 1.3762377107050743), ('gamma', 576.2111419800639)]), OrderedDict([('C', 707.3193757908591), ('gamma', 0.0001)]), OrderedDict([('C', 704.248737778332), ('gamma', 0.0001)]), OrderedDict([('C', 704.2386380279895), ('gamma', 1000.0)]), OrderedDict([('C', 704.1060882647123), ('gamma', 1000.0)]), OrderedDict([('C', 228.3003061342189), ('gamma', 0.0001)]), OrderedDict([('C', 698.1303838354632), ('gamma', 16.884889119395694)]), OrderedDict([('C', 698.3406748863083), ('gamma', 13.81153208391906)]), OrderedDict([('C', 695.782990259166), ('gamma', 15.150634407500698)]), OrderedDict([('C', 615.7678088255782), ('gamma', 0.0001)]), OrderedDict([('C', 309.3123642546476), ('gamma', 0.0001)]), OrderedDict([('C', 309.1329639234875), ('gamma', 0.0001)]), OrderedDict([('C', 425.19513247420645), ('gamma', 0.0001)]), OrderedDict([('C', 387.9749029804263), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 121.59988478070078)]), OrderedDict([('C', 0.1), ('gamma', 118.54498119370102)]), OrderedDict([('C', 2.514858938308781), ('gamma', 120.13171678193436)]), OrderedDict([('C', 0.1), ('gamma', 141.6657960356134)]), OrderedDict([('C', 0.1), ('gamma', 156.90325136151696)]), OrderedDict([('C', 13.321313232744696), ('gamma', 150.96153702587858)]), OrderedDict([('C', 4.674139954198942), ('gamma', 149.55486754707294)]), OrderedDict([('C', 0.1), ('gamma', 172.71847841853847)]), OrderedDict([('C', 8.12562279178836), ('gamma', 168.08773901836784)]), OrderedDict([('C', 11.790689982590925), ('gamma', 183.424416292933)]), OrderedDict([('C', 24.372822123793437), ('gamma', 175.04043303613324)]), OrderedDict([('C', 384.1710638618479), ('gamma', 1000.0)]), OrderedDict([('C', 381.53298011922266), ('gamma', 1000.0)]), OrderedDict([('C', 382.82529480904134), ('gamma', 997.6176977220101)]), OrderedDict([('C', 0.1), ('gamma', 134.2735056242315)]), OrderedDict([('C', 309.25883911151453), ('gamma', 0.0001)]), OrderedDict([('C', 560.3535228987123), ('gamma', 0.0001)]), OrderedDict([('C', 560.3422834309824), ('gamma', 0.0001)]), OrderedDict([('C', 560.2830554091779), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 163.4317332822159)]), OrderedDict([('C', 0.1), ('gamma', 320.60767942781143)]), OrderedDict([('C', 0.1), ('gamma', 323.73736493416504)]), OrderedDict([('C', 2.5342718494529546), ('gamma', 321.99216714324086)]), OrderedDict([('C', 395.6266551707767), ('gamma', 0.0001)]), OrderedDict([('C', 394.61689646720004), ('gamma', 2.4955378653145215)]), OrderedDict([('C', 46.062975986530674), ('gamma', 526.0092424281252)]), OrderedDict([('C', 43.22958973186357), ('gamma', 526.3197543620148)]), OrderedDict([('C', 994.8484456065003), ('gamma', 137.78230613327298)]), OrderedDict([('C', 1000.0), ('gamma', 140.12516311736158)]), OrderedDict([('C', 1000.0), ('gamma', 137.83903181325365)]), OrderedDict([('C', 1000.0), ('gamma', 134.1416298030337)]), OrderedDict([('C', 992.5358854876337), ('gamma', 720.664582014866)]), OrderedDict([('C', 1000.0), ('gamma', 720.6867813531015)]), OrderedDict([('C', 1000.0), ('gamma', 717.246937010032)]), OrderedDict([('C', 1000.0), ('gamma', 720.0170417189968)]), OrderedDict([('C', 1000.0), ('gamma', 919.8035972324933)]), OrderedDict([('C', 0.1), ('gamma', 919.3629986678839)]), OrderedDict([('C', 486.40582232109676), ('gamma', 921.8197926065358)]), OrderedDict([('C', 424.886923828931), ('gamma', 0.0001)]), OrderedDict([('C', 309.40870754353085), ('gamma', 0.0001)]), OrderedDict([('C', 961.3904630687374), ('gamma', 0.0001)]), OrderedDict([('C', 961.3888900699798), ('gamma', 0.0001)]), OrderedDict([('C', 961.3850273596607), ('gamma', 0.0001)]), OrderedDict([('C', 961.7659185360399), ('gamma', 957.2045815236507)]), OrderedDict([('C', 961.7596344082542), ('gamma', 1000.0)]), OrderedDict([('C', 961.7484019325495), ('gamma', 1000.0)]), OrderedDict([('C', 961.804605995462), ('gamma', 1000.0)]), OrderedDict([('C', 958.9420759743448), ('gamma', 0.0001)]), OrderedDict([('C', 1000.0), ('gamma', 669.2631880098622)]), OrderedDict([('C', 1000.0), ('gamma', 670.054306031465)]), OrderedDict([('C', 1000.0), ('gamma', 663.4670344881699)]), OrderedDict([('C', 958.5594908853277), ('gamma', 0.0001)]), OrderedDict([('C', 958.049976840104), ('gamma', 0.0001)]), OrderedDict([('C', 957.7003682536727), ('gamma', 0.0001)]), OrderedDict([('C', 957.4929575401609), ('gamma', 0.0001)]), OrderedDict([('C', 962.4471207422205), ('gamma', 0.0001)]), OrderedDict([('C', 963.340291335051), ('gamma', 0.0001)]), OrderedDict([('C', 963.3390797135493), ('gamma', 0.0001)]), OrderedDict([('C', 963.7043907533476), ('gamma', 0.0001)]), OrderedDict([('C', 959.1091399762219), ('gamma', 0.0001)]), OrderedDict([('C', 959.1407073293128), ('gamma', 0.0001)]), OrderedDict([('C', 956.893631272174), ('gamma', 0.0001)]), OrderedDict([('C', 959.137009440497), ('gamma', 0.0001)]), OrderedDict([('C', 962.2357445733494), ('gamma', 0.0001)]), OrderedDict([('C', 963.6150565252335), ('gamma', 0.0001)]), OrderedDict([('C', 963.1152454784949), ('gamma', 0.0001)]), OrderedDict([('C', 963.5403787534508), ('gamma', 0.0001)]), OrderedDict([('C', 960.2043421850608), ('gamma', 0.0001)]), OrderedDict([('C', 959.6910568662541), ('gamma', 0.0001)]), OrderedDict([('C', 877.9309246612828), ('gamma', 1000.0)]), OrderedDict([('C', 877.8171187502982), ('gamma', 1000.0)]), OrderedDict([('C', 960.5815665863396), ('gamma', 0.0001)]), OrderedDict([('C', 964.9006643978731), ('gamma', 0.0001)]), OrderedDict([('C', 978.0048132753057), ('gamma', 0.0001)]), OrderedDict([('C', 966.4476429110108), ('gamma', 0.0001)]), OrderedDict([('C', 968.830844695316), ('gamma', 15.84232929386152)]), OrderedDict([('C', 968.9540402105151), ('gamma', 11.869357555483546)]), OrderedDict([('C', 953.7091576205883), ('gamma', 16.596169175275673)]), OrderedDict([('C', 959.6823417878328), ('gamma', 31.585546725187406)]), OrderedDict([('C', 995.672429007236), ('gamma', 0.0001)]), OrderedDict([('C', 992.1288277476397), ('gamma', 0.0001)]), OrderedDict([('C', 994.1173576392544), ('gamma', 2.4540064062750346)]), OrderedDict([('C', 9.875959873284232), ('gamma', 904.6180190211671)]), OrderedDict([('C', 1000.0), ('gamma', 820.8138280693913)]), OrderedDict([('C', 0.1), ('gamma', 819.7193575666755)]), OrderedDict([('C', 1000.0), ('gamma', 817.0188177949085)]), OrderedDict([('C', 709.5277099095972), ('gamma', 819.6062895744509)]), OrderedDict([('C', 1000.0), ('gamma', 890.1576514554544)]), OrderedDict([('C', 1000.0), ('gamma', 890.0483620737218)]), OrderedDict([('C', 1000.0), ('gamma', 890.3694945523238)]), OrderedDict([('C', 0.1), ('gamma', 890.6681556003781)]), OrderedDict([('C', 0.1), ('gamma', 313.57186463387796)]), OrderedDict([('C', 0.1), ('gamma', 313.57740627185535)]), OrderedDict([('C', 1000.0), ('gamma', 313.4837701449241)]), OrderedDict([('C', 1000.0), ('gamma', 310.8558867289507)]), OrderedDict([('C', 1000.0), ('gamma', 201.0338529312059)]), OrderedDict([('C', 0.1), ('gamma', 200.78586045059416)]), OrderedDict([('C', 1000.0), ('gamma', 197.79181650316457)]), OrderedDict([('C', 735.6090879938214), ('gamma', 200.3587484107573)]), OrderedDict([('C', 0.1), ('gamma', 844.2023078470153)]), OrderedDict([('C', 0.1), ('gamma', 844.3685200003669)]), OrderedDict([('C', 0.1), ('gamma', 844.3944747220863)]), OrderedDict([('C', 1000.0), ('gamma', 841.7985086994912)]), OrderedDict([('C', 0.1), ('gamma', 0.0001)]), OrderedDict([('C', 0.1), ('gamma', 586.4075721380643)]), OrderedDict([('C', 1000.0), ('gamma', 583.7545066830903)]), OrderedDict([('C', 437.86733461311275), ('gamma', 584.7739542627521)]), OrderedDict([('C', 1000.0), ('gamma', 79.2737299788331)]), OrderedDict([('C', 1000.0), ('gamma', 79.2220387782875)]), OrderedDict([('C', 0.1), ('gamma', 441.6657908209867)]), OrderedDict([('C', 1000.0), ('gamma', 79.20681091454804)])]"
4,decisiontree,"[-0.86184679 -0.71773927 -0.90957022 -0.73276659 -0.73321949 -0.82910342
 -0.84536867 -0.86146961 -0.81202474 -0.80223581 -0.8240992  -0.78318396
 -0.72373678 -0.82708665 -0.77867967 -0.79331227 -0.74017996 -0.85431836
 -0.80412399 -0.76771506 -0.81904183 -0.80513097 -0.89561031 -0.82848143
 -0.84903724 -0.76627972 -0.7374753  -0.87847787 -0.86621265 -0.89892266
 -0.85256562 -0.77805096 -0.82860398 -0.72939381 -0.79856857 -0.79618733
 -0.77180605 -0.82819636 -0.85158818 -0.72732533 -0.87005126 -0.8361062
 -0.89722722 -0.84221004 -0.77183589 -0.91108812 -0.78154053 -0.77490717
 -0.80595183 -0.78815252 -0.8757314  -0.74938801 -0.83388753 -0.83551225
 -0.77977872 -0.80882399 -0.82140982 -0.70018834 -0.82834311 -0.65698035
 -0.78889947 -0.87038251 -0.7834501  -0.84704303 -0.87665554 -0.79251269
 -0.81086174 -0.78451949 -0.88743654 -1.02173725 -1.04116034 -0.92780627
 -0.67755888 -0.74696989 -0.81787827 -0.82159276 -0.68633191 -0.84137111
 -0.79360396 -0.77525926 -0.86424779 -0.81659517 -0.81768687 -0.71680664
 -0.81748482 -0.81748482 -0.81748482 -0.84688586 -0.82168783 -0.75848334
 -0.76869711 -0.72833376 -0.78812272 -0.80922136 -0.75358828 -0.86505364
 -0.76823547 -0.74838717 -0.81748482 -0.80793208 -0.82356333 -0.75049021
 -0.73264478 -0.79682028 -0.84868405 -0.81586755 -0.73231332 -0.80389867
 -0.7704108  -0.86182804 -0.82480794 -0.81222437 -0.79762658 -0.68663134
 -0.77516367 -0.72263995 -0.80592731 -0.8960659  -0.82959066 -0.80309815
 -0.86673417 -0.93583182 -0.84688586 -0.8528896  -0.73422761 -0.83806377
 -0.68324857 -0.75893835 -0.76203853 -0.80697505 -0.79265116 -0.80707629
 -0.82361258 -0.76775871 -0.71928841 -0.73719932 -0.82827314 -0.83473579
 -0.75018818 -0.79814993 -0.82769184 -0.76807117 -0.76486379 -0.73361208
 -0.82163277 -0.79453419 -0.83977983 -0.93005713 -0.72662205 -0.77983058
 -0.80450137 -0.65510958 -0.68644978 -0.75987276 -0.80180338 -0.65473767
 -0.89495259 -0.8435229  -0.79278626 -0.96790318 -0.68405652 -0.66633945
 -0.84960864 -0.76718476 -0.78433031 -0.8295861  -0.78083789 -0.69409973
 -0.80860399 -0.78981766 -0.6494621  -0.81358159 -0.74036938 -0.74859756
 -0.7453242  -0.7114403  -0.88206634 -0.92198658 -0.83674902 -0.72532628
 -0.77807523 -0.84496464 -0.79711111 -0.70147075 -0.83516821 -0.72647348
 -0.85910076 -0.74319338 -0.68692809 -0.69551106 -0.81662739 -0.81536854
 -0.8510301  -0.83018702 -0.78487152 -0.7362562  -0.772629   -0.82375749
 -0.74875808 -0.93789624 -0.72426751 -0.83733313 -0.6664088  -0.72902004
 -0.77285529 -0.85549904 -0.7782885  -0.67073326 -0.72570657 -0.69632693
 -0.80812757 -0.72734615 -0.72749736 -0.74135784 -0.82334907 -0.75385195
 -0.80675257 -0.68318264 -0.81221875 -0.91099175 -0.8615332  -0.78825215
 -0.84840764 -0.76613455 -0.69351887 -0.79493373 -0.78484911 -0.76775777
 -0.84040258 -0.87711606 -0.78107318 -0.76967138 -0.71429626 -0.67971627
 -0.77235876 -0.8341531  -0.78129557 -0.6798866  -0.75136909 -0.81717068
 -0.73196238 -0.7785508  -0.81851815 -0.75094444 -0.72771086 -0.77283712
 -0.70552727 -0.74400341 -0.7625363  -0.7983943  -0.82480002 -0.68876221
 -0.71496174 -0.73857566 -0.80545179 -0.85562919 -0.75019432 -0.84027169
 -0.87008631 -0.82633635 -0.83659097 -0.76920856 -0.7978935  -0.89372817
 -0.76931275 -0.86145894 -0.79018109 -0.75320914 -0.78115472 -0.79744934
 -0.7855466  -0.79139865 -0.76823547 -0.84936002 -0.64833533 -0.73823931
 -0.74075854 -0.77851542 -0.75624663 -0.78337254 -0.86051304 -0.83048735
 -0.7753499  -0.79590536 -0.63780402 -0.77765631 -0.64906916 -0.71441269
 -0.76159749 -0.79101152 -0.88236874 -0.84384741 -0.85666846 -0.78037612
 -0.82600899 -0.82592121 -0.73531696 -0.86289419 -0.66318782 -0.68455112
 -0.8251783  -0.82536225 -0.76302971 -0.80673107 -0.85478723 -0.73015497
 -0.87759553 -0.82758568 -0.80055947 -0.78295931 -0.79108949 -0.88339829
 -0.81558368 -0.75076899 -0.86213369 -0.71824311 -0.78715377 -0.87066036
 -0.77825548 -0.75836918 -0.70151242 -0.81875171 -0.77193354 -0.74081073
 -0.75760633 -0.80778956 -0.75621739 -0.74829498 -0.80419353 -0.78160211
 -0.79977131 -0.7352651  -0.74548357 -0.8850284  -0.68580367 -0.68955661
 -0.67183738 -0.80469893 -0.88755063 -0.77743935 -0.68779609 -0.81434255
 -0.88906714 -0.84355645 -0.67062911 -0.91844245 -0.8398477  -0.81208622
 -0.89143813 -0.740879   -0.94906577 -0.83073917 -0.71549621 -0.85198576
 -0.86383342 -0.74059003 -0.84523453 -0.7115681  -0.70494731 -0.70679208
 -0.81289845 -0.73434372 -0.80202263 -0.80430968 -0.75103662 -0.7200262
 -0.78259833 -0.66054752 -0.7601379  -0.73215397 -0.73538432 -0.79040433
 -0.84693209 -0.68444665 -0.76348672 -0.81716022 -0.71141838 -0.73645572
 -0.73172238 -0.73303928 -0.63585616 -0.70511707 -0.8248359  -0.72771843
 -0.7963738  -0.73575263 -0.76374677 -0.86512689 -0.80421394 -0.69580014
 -0.77657961 -0.76401894 -0.82383831 -0.71039766 -0.75595069 -0.69236391
 -0.89130622 -0.73604949 -0.79186284 -0.74247995 -0.86412982 -0.71935704
 -0.72443294 -0.73822727 -0.80483798 -0.77159032 -0.77309898 -0.83108462
 -0.74569294 -0.77434838 -0.79602316 -0.7784799  -0.81764549 -0.7728991
 -0.68679499 -0.66337125 -0.83202778 -0.86621889 -0.76288073 -0.78177783
 -0.67604698 -0.82520522 -0.85767358 -0.86868596 -0.73505351 -0.87459772
 -0.71987681 -0.79183976 -0.77054707 -0.8890355  -0.75122851 -0.7013483
 -0.6921846  -0.67251616 -0.76303288 -0.81971522 -0.77359243 -0.85249432
 -0.75133737 -0.75342194 -0.67705104 -0.80096493 -0.79897543 -0.84699816
 -0.74934216 -0.88350533 -0.72076514 -0.77130211 -0.83659109 -0.79325717
 -0.66596248 -0.72231829 -0.79624496 -0.74108286 -0.75859713 -0.75042774
 -0.8563776  -0.81137192 -0.8060874  -0.6541788  -0.87206108 -0.72319422
 -0.75768026 -0.86298442 -0.73173073 -0.79885745 -0.71719985 -0.68890761
 -0.80709001 -0.73175967 -0.78301959 -0.76405681 -0.72856987 -0.69284036
 -0.7526202  -0.69260371 -0.73505867 -0.84390863 -0.7639749  -0.76098611
 -0.75931986 -0.75102348 -0.71699227 -0.67382423 -0.83878897 -0.80553979
 -0.73076423 -0.77659328 -0.78468121 -0.74999927 -0.83194974 -0.69816782
 -0.69615263 -0.77708844 -0.78915535 -0.96049111 -0.76595797 -0.78109224
 -0.74968069 -0.69683687]","[0.7238025  0.52683186 0.80510409 0.64553746 0.66790212 0.68733612
 0.76330664 0.70695216 0.66608675 0.66876075 0.71093124 0.57586139
 0.61352089 0.68846426 0.59538621 0.73262429 0.61622695 0.71782834
 0.6720136  0.60629088 0.80085451 0.74543478 0.86919535 0.83247335
 0.7238266  0.73436536 0.68679447 0.70294577 0.77525512 0.64608951
 0.72196522 0.59914204 0.75869523 0.56284677 0.64009177 0.63847588
 0.71145617 0.69940189 0.69415714 0.52493914 0.80080108 0.74182814
 0.82196766 0.77907811 0.68958614 0.89568502 0.70638668 0.73835615
 0.70543468 0.68724835 0.73175298 0.7235507  0.82859398 0.8169502
 0.72047703 0.62110638 0.62764274 0.59564798 0.72566393 0.5430092
 0.67320905 0.82427316 0.63520085 0.78782669 0.66679572 0.7277415
 0.68474683 0.65028172 0.79068859 0.87845554 0.81620252 0.69900739
 0.60276159 0.66861134 0.76626633 0.79073457 0.60134077 0.90153511
 0.75115373 0.60739239 0.82159629 0.58217581 0.63592688 0.52897572
 0.80989875 0.80989875 0.80989875 0.85863436 0.73089498 0.74619737
 0.71160075 0.51617485 0.76444619 0.68918825 0.71459623 0.70246622
 0.73922371 0.72057289 0.80989875 0.77365416 0.63579913 0.67110417
 0.60055297 0.63621907 0.84756971 0.76220912 0.56426056 0.71067325
 0.57335961 0.666349   0.69536056 0.5674693  0.78400967 0.62335047
 0.63619206 0.64712805 0.74122434 0.849488   0.73486779 0.62483778
 0.87210624 0.93857605 0.85863436 0.73438742 0.73129654 0.75300717
 0.60037767 0.60268849 0.55394187 0.6552723  0.51879195 0.61956532
 0.77773758 0.53676199 0.77028104 0.62163892 0.73805139 0.64221991
 0.72490635 0.74719292 0.6099573  0.72149817 0.67556179 0.66023285
 0.69821286 0.75391669 0.674041   0.89434393 0.64071628 0.65356319
 0.7274465  0.5463104  0.66604647 0.81094649 0.6180621  0.5719928
 0.71927681 0.63903862 0.61110122 0.81903257 0.73790703 0.42850945
 0.9109552  0.60430308 0.58248246 0.74140725 0.67255426 0.56026315
 0.7090975  0.7571156  0.48488889 0.68817023 0.58565231 0.64264948
 0.71562524 0.56131452 0.82396041 0.85637182 0.76031422 0.66238723
 0.59831999 0.73191342 0.72047959 0.57679118 0.76376324 0.55184737
 0.67835529 0.62970832 0.53735725 0.48773236 0.74459211 0.60358202
 0.7495091  0.65875005 0.65450607 0.66949371 0.66408173 0.76254207
 0.55115757 0.92227328 0.57858099 0.82487542 0.59363654 0.55830219
 0.69082212 0.71906787 0.78001146 0.53254413 0.64379449 0.48235153
 0.4877523  0.71608809 0.51400662 0.59029794 0.58891859 0.5351716
 0.71006634 0.49105165 0.72864213 0.8952541  0.81942671 0.75904666
 0.7982813  0.68386686 0.65509129 0.63825798 0.67430966 0.70333057
 0.74529305 0.74199462 0.70948856 0.61129591 0.54968446 0.51268295
 0.59369021 0.75809543 0.65257707 0.67338094 0.76530366 0.74570975
 0.65031339 0.64925871 0.69821629 0.66082165 0.7598074  0.67428058
 0.65791255 0.6495314  0.60602022 0.71921312 0.73598312 0.52855831
 0.58181522 0.60528255 0.67471076 0.74231689 0.49116058 0.71459001
 0.74492453 0.61045921 0.62839968 0.64921568 0.69900788 0.69431494
 0.71626281 0.68135118 0.56565657 0.5952807  0.64419044 0.68353508
 0.69050473 0.69090335 0.73922371 0.71942158 0.4764936  0.65360305
 0.70159615 0.58974166 0.53252727 0.70482263 0.63878027 0.68651878
 0.62098297 0.62447389 0.60391374 0.5713905  0.51888997 0.5243479
 0.59070582 0.77431633 0.88944117 0.73114315 0.72639991 0.74908161
 0.63745257 0.73651547 0.60013569 0.66655305 0.48233648 0.51464355
 0.69531294 0.78916284 0.76859778 0.65214819 0.76831871 0.61278611
 0.64189366 0.67359021 0.64302642 0.69067997 0.67621686 0.75540283
 0.72713462 0.86565271 0.89087184 0.60893376 0.66376434 0.72827029
 0.61743692 0.58818288 0.53661466 0.6901833  0.61721789 0.61969805
 0.68828788 0.73785905 0.65477887 0.64126254 0.67705157 0.6325124
 0.67384596 0.67856749 0.62489977 0.73369697 0.61002234 0.56440399
 0.59640089 0.69525539 0.8058465  0.65261273 0.59065126 0.70955904
 0.69014243 0.73773546 0.51205904 0.75546909 0.74267675 0.76388642
 0.77457708 0.58794105 0.75155865 0.77739063 0.57500791 0.75266753
 0.78579782 0.54794032 0.74319035 0.55795831 0.55800607 0.62504609
 0.72261262 0.64118344 0.70697992 0.62771373 0.66775394 0.58136646
 0.69573836 0.45634902 0.55637582 0.52699045 0.50342147 0.70104432
 0.75987643 0.60743973 0.69737335 0.66261686 0.49616443 0.56335308
 0.64225638 0.52339804 0.48027994 0.59057739 0.71457824 0.52924509
 0.69044251 0.59290721 0.63976974 0.67457534 0.66146048 0.54290637
 0.63320842 0.71073269 0.73679964 0.5806466  0.65366381 0.61697322
 0.827223   0.55465141 0.70356892 0.58556542 0.81909698 0.60516552
 0.63723094 0.59605424 0.66901643 0.65511804 0.69930818 0.6634615
 0.56770883 0.60641479 0.75253684 0.64398655 0.72629267 0.70248671
 0.52885657 0.51916937 0.73327484 0.7843649  0.68053731 0.5871169
 0.48524888 0.69384692 0.72028539 0.83654839 0.60444928 0.73936308
 0.55140109 0.70908357 0.61904048 0.81646311 0.66429632 0.59221879
 0.54439667 0.43435224 0.64174591 0.71276647 0.67349687 0.73012137
 0.58286747 0.70264973 0.50698698 0.64164931 0.62131465 0.7041336
 0.69514715 0.83276905 0.55836979 0.52229321 0.68192001 0.61414345
 0.43657535 0.43546156 0.65003228 0.55859035 0.58479786 0.56827606
 0.66603774 0.65512413 0.55778104 0.47973595 0.72494729 0.56118673
 0.55058808 0.73512069 0.549454   0.66876709 0.56447298 0.52887435
 0.72189996 0.54906467 0.70645046 0.753919   0.567776   0.5417272
 0.50194125 0.57504249 0.64660622 0.71767012 0.53707173 0.52435857
 0.53937118 0.68047656 0.56369382 0.5997168  0.75759789 0.67270635
 0.50757376 0.58317815 0.62802797 0.49480018 0.67042034 0.56611214
 0.61118261 0.77165197 0.5576022  0.86680213 0.61364371 0.76232084
 0.64707614 0.58610394]","[OrderedDict([('max_depth', 8), ('max_features', 'log2'), ('max_leaf_nodes', 7), ('splitter', 'best')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 2), ('max_features', 'auto'), ('max_leaf_nodes', 3), ('splitter', 'best')]), OrderedDict([('max_depth', 2), ('max_features', 'sqrt'), ('max_leaf_nodes', 3), ('splitter', 'best')]), OrderedDict([('max_depth', 9), ('max_features', 'log2'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 9), ('max_features', 'sqrt'), ('max_leaf_nodes', 3), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'best')]), OrderedDict([('max_depth', 3), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'best')]), OrderedDict([('max_depth', 5), ('max_features', 'log2'), ('max_leaf_nodes', 3), ('splitter', 'random')]), OrderedDict([('max_depth', 9), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 9), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'log2'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'auto'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 2), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'best')]), OrderedDict([('max_depth', 2), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'best')]), OrderedDict([('max_depth', 2), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 3), ('splitter', 'best')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 9), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'best')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 7), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 8), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 9), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 5), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 2), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 3), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 9), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 5), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'best')]), OrderedDict([('max_depth', 4), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 9), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'log2'), ('max_leaf_nodes', 6), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'log2'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 5), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 5), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 5), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 5), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 5), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 5), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 8), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'auto'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 10), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 6), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 3), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'auto'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 1), ('max_features', 'sqrt'), ('max_leaf_nodes', 7), ('splitter', 'best')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 4), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 2), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 10), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 6), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')]), OrderedDict([('max_depth', 7), ('max_features', 'sqrt'), ('max_leaf_nodes', 5), ('splitter', 'random')])]"
5,randomforest,"[-0.68906449 -0.68120057 -0.66849399 -0.68664466 -0.68252161 -0.71969962
 -0.68065812 -0.68796726 -0.68907022 -0.6814561  -0.66969293 -0.67496236
 -0.68071098 -0.68770325 -0.68118184 -0.6835537  -0.67849466 -0.67451905
 -0.67242179 -0.75195183 -0.67831185 -0.67015892 -0.66895462 -0.67117523
 -0.67971644 -0.67284007 -0.67844544 -0.67825363 -0.68524592 -0.67289773
 -0.68009355 -0.68114573 -0.68279939 -0.6799175  -0.67989265 -0.67155786
 -0.67105585 -0.67609906 -0.67833318 -0.67580739 -0.67390364 -0.67429866
 -0.6765814  -0.66689767 -0.67782599 -0.67462632 -0.67745615 -0.67602864
 -0.67884334 -0.68754993 -0.67568659 -0.68261562 -0.69193743 -0.68788226
 -0.69035904 -0.68044619 -0.67130183 -0.67824107 -0.6793297  -0.67584034
 -0.67870273 -0.67351277 -0.68820309 -0.68618234 -0.6730922  -0.67584702
 -0.68165314 -0.6548423  -0.67724469 -0.68194425 -0.67895463 -0.67917752
 -0.66206047 -0.69028603 -0.6754823  -0.65551546 -0.67451289 -0.67665582
 -0.68187816 -0.68182786 -0.67505998 -0.68591991 -0.68192076 -0.68933412
 -0.68984168 -0.68603845 -0.68183739 -0.67033922 -0.68453333 -0.67372341
 -0.67312864 -0.68320995 -0.67230458 -0.67116155 -0.67449943 -0.67467234
 -0.6690356  -0.67545377 -0.68024557 -0.68413095 -0.68403719 -0.68523816
 -0.68181128 -0.68765145 -0.68507652 -0.67425919 -0.67216739 -0.67558736
 -0.68877396 -0.68302129 -0.68191862 -0.6834571  -0.68322358 -0.67786587
 -0.68256334 -0.68565681 -0.6763269  -0.67757896 -0.68367243 -0.67185177
 -0.6917931  -0.68334206 -0.68723716 -0.68857363 -0.68389717 -0.6849135
 -0.68023697 -0.6762979  -0.67897191 -0.67583071 -0.67766149 -0.67050765
 -0.67096748 -0.68061987 -0.67512176 -0.68339046 -0.68481801 -0.69777066
 -0.69492322 -0.6859301  -0.67380718 -0.66773501 -0.67763578 -0.66844234
 -0.68503534 -0.67648945 -0.67195738 -0.67492653 -0.68463497 -0.67749728
 -0.68864155 -0.68469051 -0.68529918 -0.67470681 -0.67607263 -0.67393845
 -0.67307647 -0.68329955 -0.67409796 -0.68111055 -0.67499272 -0.67861825
 -0.67583185 -0.67814947 -0.68193059 -0.66728199 -0.67256231 -0.67948596
 -0.67741227 -0.67005355 -0.68005059 -0.68528924 -0.6783012  -0.67086485
 -0.67499197 -0.67303089 -0.6725193  -0.68044021 -0.67299593 -0.67115084
 -0.68594954 -0.68649822 -0.681322   -0.67431793 -0.689191   -0.67606445
 -0.69181506 -0.68946092 -0.67831931 -0.67301301 -0.67457176 -0.67482895
 -0.68942765 -0.6855598  -0.68147259 -0.68730107 -0.65088832 -0.66316359
 -0.69212288 -0.67487658 -0.69270406 -0.69438395 -0.67685113 -0.72734462
 -0.67848896 -0.68097675 -0.69040084 -0.67933923 -0.68196575 -0.69029078
 -0.69839405 -0.68128481 -0.68943837 -0.67799882 -0.68433539 -0.68000572
 -0.66750789 -0.6755016  -0.67767511 -0.6796012  -0.68082138 -0.68456575
 -0.68405718 -0.69012911 -0.67924794 -0.68910397 -0.67934876 -0.67972134
 -0.68522765 -0.67542711 -0.67999226 -0.67092301 -0.68165402 -0.68281939
 -0.67218115 -0.68016069 -0.6788455  -0.66371075 -0.67451188 -0.67432134
 -0.67473209 -0.66704505 -0.66519442 -0.66961346 -0.68677    -0.66358895
 -0.68500067 -0.66327501 -0.6859891  -0.68809153 -0.692729   -0.68088325
 -0.67205723 -0.67264609 -0.68116217 -0.68007038 -0.68071406 -0.68293758
 -0.68402701 -0.68428407 -0.68861201 -0.68472502 -0.68374457 -0.68149982
 -0.67236228 -0.68273237 -0.67178438 -0.67695765 -0.72341451 -0.7087889
 -0.65671666 -0.69112946 -0.6767483  -0.67963263 -0.67213514 -0.67770929
 -0.68372903 -0.68534089 -0.67732017 -0.67935887 -0.68120898 -0.67664395
 -0.67771351 -0.67938176 -0.68222833 -0.68429618 -0.68492873 -0.66091413
 -0.69959996 -0.67885748 -0.71534636 -0.67874422 -0.6734958  -0.67165259
 -0.67863493 -0.67316054 -0.68534031 -0.68543231 -0.67626631 -0.67970187
 -0.64547914 -0.6873711  -0.74535399 -0.77925371 -0.66334444 -0.69350357
 -0.68526788 -0.66089642 -0.67972656 -0.68949471 -0.68134052 -0.67304782
 -0.6730553  -0.68621334 -0.68492436 -0.68302707 -0.6712374  -0.66965415
 -0.6832395  -0.67593115 -0.68729204 -0.68019655 -0.67843433 -0.67654878
 -0.68216714 -0.68211498 -0.67708642 -0.67898739 -0.67457039 -0.67869411
 -0.68059221 -0.67224084 -0.67178182 -0.67351755 -0.68575545 -0.67514785
 -0.67320664 -0.6975341  -0.67967126 -0.68210031 -0.67542043 -0.6840773
 -0.67309709 -0.67981851 -0.67757941 -0.68121588 -0.68661178 -0.68451887
 -0.68057383 -0.6636351  -0.67609099 -0.7195589  -0.67437033 -0.66675284
 -0.68332831 -0.67976883 -0.68046913 -0.68170748 -0.67019192 -0.68022446
 -0.68018247 -0.66125971 -0.67269678 -0.68146487 -0.68168419 -0.67700467
 -0.66914369 -0.67724602 -0.68844399 -0.67920388 -0.67660541 -0.69268757
 -0.67469609 -0.67882454 -0.67728895 -0.67427818 -0.67246374 -0.6928557
 -0.66571824 -0.68685447 -0.67865055 -0.67702548 -0.6801263  -0.67653784
 -0.67581913 -0.67503658 -0.67979226 -0.68198916 -0.68519109 -0.68312692
 -0.68020625 -0.6805031  -0.68837911 -0.66829393 -0.67748711 -0.67108831
 -0.68630608 -0.69226838 -0.67893052 -0.67923891 -0.67332788 -0.67551632
 -0.67857762 -0.68653531 -0.68254757 -0.67906722 -0.67154342 -0.67711576
 -0.68081891 -0.68896039 -0.68515834 -0.67048797 -0.67573399 -0.67567001
 -0.6790862  -0.68715966 -0.67672145 -0.67426624 -0.6687812  -0.6766624
 -0.67330461 -0.68069626 -0.67490469 -0.67704602 -0.68288242 -0.67761893
 -0.68586416 -0.67780006 -0.69015892 -0.67644773 -0.68895378 -0.68334549
 -0.68870766 -0.68140913 -0.68492918 -0.6891506  -0.67375474 -0.67309794
 -0.67873924 -0.67067751 -0.68167286 -0.66806771 -0.65856416 -0.67030705
 -0.67933197 -0.67920536 -0.69217235 -0.68352107 -0.67568504 -0.68929089
 -0.68863316 -0.67437228 -0.67611055 -0.6781467  -0.68277258 -0.67519024
 -0.69053206 -0.67157201 -0.67694698 -0.66611148 -0.68305978 -0.68115911
 -0.69003628 -0.66864991 -0.69161968 -0.66901221 -0.67542525 -0.67487286
 -0.66143098 -0.6976278  -0.68336157 -0.68781634 -0.678538   -0.68454593
 -0.68277496 -0.6867083  -0.67994715 -0.65835573 -0.67339378 -0.68161072
 -0.67353293 -0.67301001 -0.66095309 -0.68172051 -0.68034349 -0.67674495
 -0.67789985 -0.67259811 -0.68844043 -0.6754623  -0.67374784 -0.6887736
 -0.67420182 -0.68991264 -0.67496378 -0.6798951  -0.68077449 -0.67853487
 -0.67167781 -0.67489637]","[0.4697724  0.48882804 0.49255225 0.47872968 0.46647008 0.51908222
 0.47193933 0.46934895 0.47118842 0.49496963 0.49001266 0.49402498
 0.48118349 0.47270756 0.4724165  0.47640577 0.4863032  0.48229048
 0.4946402  0.54266036 0.48037789 0.48977047 0.47852768 0.49340656
 0.49067424 0.48497912 0.48318357 0.48958968 0.48766873 0.49054894
 0.49229063 0.48563926 0.48857384 0.48505427 0.4914233  0.49064562
 0.48038362 0.48618687 0.48926709 0.49314892 0.49017357 0.47632245
 0.49203556 0.48442405 0.49947073 0.48802475 0.48240025 0.48839073
 0.48812429 0.47342517 0.484263   0.46815128 0.48066358 0.48511281
 0.47868469 0.47576765 0.49088501 0.49475851 0.48313337 0.48902864
 0.4921568  0.4915165  0.47650436 0.47490962 0.49201009 0.48284344
 0.47884804 0.49257777 0.49058692 0.47587604 0.50205949 0.4828415
 0.48909824 0.48816036 0.48237175 0.48188601 0.48812321 0.49015826
 0.47714324 0.48490406 0.47398845 0.46999761 0.48109328 0.49149137
 0.47798864 0.48824798 0.47243032 0.47266647 0.47908932 0.4860204
 0.48421956 0.4728543  0.48416877 0.49115098 0.4911728  0.48641219
 0.49183845 0.49336558 0.49081936 0.49019338 0.47245587 0.47473851
 0.47404209 0.46869572 0.49469528 0.48090017 0.48421773 0.49886601
 0.47291873 0.47806693 0.47824663 0.47841698 0.47180755 0.47686979
 0.47247256 0.47803    0.48490018 0.49202355 0.49137439 0.48799599
 0.47000863 0.47995083 0.47018393 0.46812564 0.48957234 0.4912239
 0.48831633 0.4854388  0.49070448 0.48889585 0.48978399 0.49105401
 0.48921235 0.48849155 0.48911973 0.4917051  0.50040687 0.47883717
 0.48631887 0.47896865 0.48328816 0.49190322 0.4886691  0.47892267
 0.48426926 0.49510538 0.49362397 0.48132987 0.46885029 0.48083786
 0.48120415 0.47449549 0.49006544 0.48157815 0.48484171 0.48697846
 0.50124066 0.4888711  0.48572964 0.50224842 0.4863192  0.49406281
 0.48588711 0.4910162  0.48763908 0.48602118 0.48691194 0.489509
 0.47729822 0.50516583 0.48405501 0.47364728 0.48946422 0.4865004
 0.47528868 0.47910858 0.49222089 0.48755524 0.49181171 0.49230524
 0.4781762  0.47960454 0.47901685 0.48864319 0.48363992 0.47789321
 0.50397328 0.46650775 0.48896368 0.4770793  0.48970809 0.48209442
 0.48145531 0.47272386 0.47807531 0.47461742 0.49954476 0.49768928
 0.49664119 0.49515123 0.57174136 0.5191685  0.48622369 0.48361325
 0.48364231 0.4618241  0.47996623 0.48241653 0.47738634 0.46953359
 0.48538177 0.48041907 0.49202232 0.47860939 0.48244334 0.47635655
 0.48414907 0.4922041  0.48142454 0.48411458 0.4750547  0.47998774
 0.47597481 0.47587929 0.48866209 0.48740323 0.50058183 0.50147278
 0.48520212 0.48841566 0.48873554 0.49139428 0.48805624 0.48798298
 0.48481193 0.49341973 0.49076202 0.48586277 0.48584664 0.49453301
 0.49510087 0.48169138 0.48931572 0.47289115 0.48696166 0.48887783
 0.49315835 0.50188619 0.48055414 0.48113824 0.4834369  0.47535202
 0.4868719  0.49563806 0.48925178 0.49350413 0.47944557 0.47894478
 0.4701698  0.48017182 0.47364041 0.47272691 0.47739266 0.47521469
 0.48465037 0.48059556 0.49010073 0.51101743 0.54286775 0.52873088
 0.5026805  0.52351083 0.48670707 0.48867016 0.48637579 0.49051149
 0.47024819 0.49343159 0.48257902 0.47163636 0.48669469 0.49102188
 0.48836841 0.49010773 0.47783253 0.48393882 0.47710464 0.49341034
 0.52884936 0.49762192 0.52528834 0.48965376 0.48977441 0.48682342
 0.49284355 0.48558863 0.47615314 0.47766446 0.47131886 0.48883903
 0.47742574 0.50043587 0.50205787 0.54015366 0.49824774 0.47627844
 0.49544321 0.48143913 0.47981551 0.48432771 0.49395951 0.49031513
 0.49267059 0.48541894 0.48381213 0.47950261 0.482586   0.49413523
 0.48241551 0.49374183 0.48848027 0.48446028 0.49467057 0.49346763
 0.47202528 0.49571866 0.48704496 0.48866543 0.48494413 0.48684978
 0.49017421 0.48568544 0.49688344 0.49171328 0.50333135 0.48329284
 0.49123983 0.47523514 0.47289478 0.48087681 0.49551798 0.48450177
 0.48856714 0.48563028 0.4793886  0.47843209 0.47472918 0.4744608
 0.48942168 0.492841   0.4910629  0.50450795 0.49052212 0.4961887
 0.49134756 0.48822656 0.4523594  0.46240965 0.4749904  0.46294805
 0.48910976 0.48098153 0.4918558  0.48145977 0.49199094 0.49479503
 0.48303579 0.48443704 0.47180553 0.47112668 0.48213327 0.46520378
 0.49093377 0.48895648 0.49181658 0.48660567 0.48240255 0.4945244
 0.49058865 0.48933056 0.49290309 0.47862871 0.48058883 0.48719454
 0.48512385 0.49293391 0.48903674 0.48748758 0.47062008 0.47408565
 0.47978359 0.48160558 0.49920848 0.49092694 0.4935116  0.47778619
 0.47498883 0.4755933  0.48361853 0.48753156 0.49123052 0.49341284
 0.49777005 0.4715122  0.4879112  0.48655497 0.48589481 0.48600396
 0.46936706 0.48412364 0.49612522 0.49008864 0.48134471 0.49236818
 0.49280054 0.4868109  0.48514481 0.48235979 0.49172824 0.48440032
 0.48528827 0.48221401 0.48705494 0.48744132 0.4893128  0.49166408
 0.48426192 0.4782992  0.47516041 0.49698966 0.47887796 0.47272927
 0.48122753 0.47499597 0.47565926 0.47419418 0.48215377 0.48244251
 0.49235442 0.49215026 0.49551743 0.49373756 0.47752848 0.48551467
 0.49021335 0.49162795 0.50583528 0.49281761 0.4869119  0.47531109
 0.47579915 0.48846593 0.48907174 0.48530793 0.48288448 0.50241494
 0.49806661 0.48737813 0.48773322 0.49249412 0.47302066 0.47867171
 0.47601489 0.48415005 0.48201398 0.49012466 0.49256125 0.49295066
 0.49671061 0.47787141 0.4772454  0.47796597 0.48114567 0.47473784
 0.48426886 0.47161908 0.49102895 0.48536467 0.49133275 0.48828966
 0.49818414 0.49508798 0.48320976 0.47018236 0.49537296 0.48676157
 0.48716711 0.48992225 0.49272525 0.49339715 0.48461476 0.49050825
 0.50878955 0.5018133  0.48812874 0.48436195 0.49340119 0.48554496
 0.48530991 0.48912646]","[OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 350)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 264)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 429)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 549)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 595)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 19)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 807)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 170)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 794)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 119)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 706)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 975)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 664)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 750)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 536)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 250)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 890)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 223)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 896)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 462)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 485)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 437)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 829)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 208)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 926)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 941)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 916)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 308)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 306)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 305)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 303)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 589)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 999)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 583)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 556)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 560)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 188)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 620)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 808)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 827)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 790)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 730)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 999)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 411)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 408)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 414)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 412)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 584)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 496)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 420)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 530)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 657)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 657)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 684)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 679)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 999)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 160)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 180)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 200)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 198)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 190)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 185)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 211)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 218)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 220)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 202)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 597)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 601)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 888)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 886)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 263)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 282)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 276)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 276)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 127)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 154)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 146)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 113)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 515)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 518)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 516)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 507)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 371)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 372)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 369)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 370)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 883)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 858)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 871)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 860)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 748)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 747)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 743)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 733)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 123)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 150)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 148)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 150)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 617)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 618)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 625)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 635)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 922)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 924)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 937)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 937)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 727)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 713)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 715)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 755)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 841)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 843)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 846)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 849)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 196)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 198)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 199)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 199)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 571)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 945)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 944)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 945)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 458)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 447)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 457)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 425)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 98)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 80)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 84)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 76)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 570)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 569)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 642)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 643)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 580)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 344)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 584)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 346)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 497)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 490)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 469)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 467)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 789)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 788)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 785)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 777)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 105)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 151)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 108)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 96)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 950)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 950)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 948)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 956)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 533)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 337)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 349)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 339)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 334)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 672)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 672)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 672)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 660)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 273)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 274)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 273)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 288)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 191)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 182)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 182)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 178)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 618)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 619)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 621)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 393)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 561)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 560)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 561)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 565)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 84)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 80)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 73)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 67)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 10)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 10)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 237)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 238)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 241)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 240)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 374)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 375)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 375)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 379)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 101)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 698)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 673)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 676)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 491)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 491)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 490)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 492)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 783)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 781)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 775)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 773)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 625)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 398)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 389)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 391)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 307)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 901)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 901)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 902)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 838)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 848)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 837)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 837)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 340)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 339)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 330)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 330)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 244)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 243)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 242)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 239)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 241)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 241)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 240)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 240)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 452)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 450)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 448)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 449)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 750)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 753)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 755)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 756)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 896)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 894)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 897)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 902)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 957)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 957)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 961)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 960)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 624)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 697)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 650)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 237)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 238)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 236)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 239)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 256)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 11)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 285)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 257)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 11)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 10)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 213)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 647)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 212)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 211)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 485)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 485)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 525)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 481)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 215)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 161)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 200)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 157)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 878)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 220)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 221)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 876)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 218)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 219)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 219)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 219)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 728)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 656)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 658)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 726)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 217)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 875)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 220)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 873)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 604)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 612)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 600)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 599)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 601)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 600)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 598)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 597)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 214)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 216)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 217)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 11)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 208)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 209)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 117)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 116)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 149)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 143)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 138)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 132)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 399)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 196)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 195)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 399)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 784)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 781)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 776)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 776)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 287)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 287)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 257)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 285)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 906)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 916)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 906)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 914)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 188)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 185)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 183)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 180)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 195)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 194)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 709)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 193)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 423)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 431)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 401)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 425)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 718)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 717)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 714)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 700)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 106)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 104)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 146)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 142)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 526)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 526)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 527)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 539)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 190)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 189)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 189)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 838)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 813)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 897)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 817)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 818)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 123)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 115)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 155)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 152)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 700)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 701)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 681)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 682)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 346)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 345)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 320)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 325)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 193)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 194)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 999)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 1000)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 509)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 552)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 508)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 508)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 308)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 274)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 303)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 304)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 823)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 824)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 823)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 822)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 917)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 918)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 919)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 920)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 95)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 93)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 91)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 127)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 160)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 158)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 156)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 154)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 934)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 649)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 650)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 935)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 934)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 934)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 366)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 361)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 101)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 145)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 144)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 143)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 433)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 439)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'sqrt'), ('n_estimators', 437)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 159)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 164)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 163)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 758)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 791)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 165)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 210)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 211)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 212)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 160)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 917)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 159)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 917)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 162)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 161)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 160)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 159)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 162)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 161)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 160)]), OrderedDict([('criterion', 'squared_error'), ('max_features', 'log2'), ('n_estimators', 556)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'sqrt'), ('n_estimators', 457)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 163)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 456)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 456)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 160)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 159)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 80)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 80)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 161)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 161)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 160)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 159)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 821)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 820)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 840)]), OrderedDict([('criterion', 'absolute_error'), ('max_features', 'log2'), ('n_estimators', 839)])]"
6,adaboost,"[-0.72817773 -0.73108322 -0.76032608 -0.74098964 -0.72622851 -0.78233718
 -0.7262782  -0.74491779 -0.67464405 -0.76060079 -0.72905619 -0.73928592
 -0.7837046  -0.72484312 -0.79711565 -0.75031958 -0.74808621 -0.72988907
 -0.72143965 -0.75007083 -0.72342246 -0.69822454 -0.7315887  -0.71399795
 -0.7494621  -0.72589648 -0.741563   -0.74257201 -0.71893692 -0.73853281
 -0.7308256  -0.73494526 -0.73781281 -0.71389734 -0.75061579 -0.74406149
 -0.77534795 -0.76285694 -0.74223508 -0.74234831 -0.77354264 -0.72083471
 -0.72639703 -0.75496115 -0.72372797 -0.7433768  -0.73221507 -0.73667169
 -0.73803965 -0.74647288 -0.74246386 -0.73159784 -0.73473875 -0.72590612
 -0.76150516 -0.7559473  -0.74472882 -0.68351434 -0.71178391 -0.70258521
 -0.72741335 -0.74160788 -0.72846663 -0.72948962 -0.76287322 -0.7200332
 -0.7430481  -0.73756738 -0.73740867 -0.74447703 -0.7421733  -0.74204359
 -0.68574641 -0.75296614 -0.73254282 -0.68139939 -0.73064178 -0.73759062
 -0.74085024 -0.70035243 -0.71068197 -0.72439994 -0.75573449 -0.72592559
 -0.73926217 -0.72541054 -0.77119993 -0.75191876 -0.75259807 -0.7463432
 -0.75570625 -0.73639842 -0.74255512 -0.71021335 -0.69884758 -0.70769173
 -0.71490686 -0.70817302 -0.68193798 -0.79470012 -0.66324309 -0.75174442
 -0.69404563 -0.7590595  -0.74676876 -0.75141916 -0.72735201 -0.73543902
 -0.6750415  -0.74057669 -0.75612    -0.72824425 -0.69453539 -0.746767
 -0.75097816 -0.75709306 -0.72593618 -0.67038288 -0.73664226 -0.70511867
 -0.6366698  -0.64851145 -0.67495868 -0.71534403 -0.7376945  -0.74966601
 -0.67120789 -0.73837866 -0.73486938 -0.71826318 -0.73894148 -0.7608691
 -0.74812555 -0.69045284 -0.67233914 -0.74266727 -0.71215968 -0.6505131
 -0.74936989 -0.76445274 -0.72599642 -0.76139511 -0.73587072 -0.73984443
 -0.73833902 -0.74372344 -0.82034304 -0.76205806 -0.72910567 -0.78874108
 -0.64808798 -0.70328409 -0.73155589 -0.70871424 -0.72163145 -0.74758583
 -0.73158998 -0.7933031  -0.73126193 -0.69495869 -0.74959444 -0.7517158
 -0.71857953 -0.76311258 -0.69781101 -0.67709828 -0.7248782  -0.73897737
 -0.73620425 -0.76785777 -0.74524566 -0.67762721 -0.7627325  -0.60926974
 -0.75117418 -0.68801229 -0.69949629 -0.71950011 -0.75197906 -0.65379658
 -0.74076636 -0.70533452 -0.74268693 -0.71964769 -0.70201538 -0.73120495
 -0.72255649 -0.74859221 -0.74955843 -0.73669724 -0.72878736 -0.75224336
 -0.66368701 -0.69239341 -0.77153926 -0.77492961 -0.7621459  -0.72424054
 -0.71095396 -0.73697857 -0.69819099 -0.73475281 -0.65291297 -0.73713816
 -0.73819804 -0.66881786 -0.6874964  -0.74460558 -0.76481931 -0.64617683
 -0.65449827 -0.75388657 -0.72798531 -0.73319386 -0.71159448 -0.6930779
 -0.62045858 -0.75702498 -0.6538965  -0.74862837 -0.67956699 -0.73513194
 -0.75074153 -0.78225009 -0.67472623 -0.67151464 -0.73154884 -0.67741362
 -0.70219621 -0.72852368 -0.6848464  -0.76591441 -0.68888219 -0.73240156
 -0.65304723 -0.71900257 -0.74049266 -0.71105815 -0.73435642 -0.7309986
 -0.7329681  -0.64290572 -0.75289394 -0.73554982 -0.66349355 -0.73190724
 -0.7314918  -0.73711468 -0.7408999  -0.75486725 -0.70738678 -0.67328729
 -0.72266597 -0.72644295 -0.75514637 -0.74475798 -0.73176683 -0.73718121
 -0.71807859 -0.67696267 -0.73584694 -0.74795286 -0.66447211 -0.69986373
 -0.76045584 -0.75537238 -0.65179024 -0.67382487 -0.75249483 -0.73776696
 -0.7670422  -0.6999897  -0.66415481 -0.74317131 -0.71365547 -0.71199903
 -0.69739806 -0.73236768 -0.72901632 -0.73092021 -0.68453875 -0.73638087
 -0.73358227 -0.72782715 -0.76308182 -0.71989892 -0.70911399 -0.68534606
 -0.67958068 -0.72323597 -0.73422196 -0.77100855 -0.68811302 -0.75990781
 -0.73563633 -0.72241055 -0.692508   -0.65457302 -0.73294629 -0.67611585
 -0.77168885 -0.77469124 -0.7506272  -0.6929362  -0.69542551 -0.73442004
 -0.73496001 -0.64284552 -0.71714128 -0.65123419 -0.66096849 -0.7474912
 -0.71886873 -0.715505   -0.75651474 -0.69279207 -0.74466157 -0.71058812
 -0.71996923 -0.75432261 -0.66789146 -0.73699182 -0.7793725  -0.75036135
 -0.73108196 -0.7362824  -0.70073243 -0.69256865 -0.7266079  -0.73349396
 -0.73115772 -0.66756722 -0.7021143  -0.78134955 -0.70832429 -0.69490574
 -0.76904969 -0.82908103 -0.75062424 -0.75688609 -0.70929424 -0.7249769
 -0.78336634 -0.7090902  -0.74000294 -0.64751334 -0.76389296 -0.7510153
 -0.76406741 -0.71088944 -0.68386109 -0.74538823 -0.78402797 -0.76936914
 -0.67776099 -0.74648911 -0.77578665 -0.70098716 -0.67852733 -0.72049161
 -0.75123454 -0.70818918 -0.74353619 -0.72010366 -0.73026831 -0.76552402
 -0.63574935 -0.64014048 -0.80948865 -0.75725383 -0.736272   -0.70723953
 -0.64295343 -0.72824314 -0.67635205 -0.76302026 -0.71597644 -0.78026891
 -0.70625067 -0.59932036 -0.64245791 -0.74145764 -0.75989674 -0.66766361
 -0.68503149 -0.70676454 -0.69019971 -0.70849768 -0.72565019 -0.60513128
 -0.73881294 -0.7420631  -0.76585337 -0.76790893 -0.70075171 -0.74077853
 -0.72774195 -0.7386364  -0.67294857 -0.65234212 -0.73715369 -0.73516176
 -0.67648148 -0.69377164 -0.76523827 -0.61025343 -0.75085495 -0.69076503
 -0.73512313 -0.73423885 -0.75483311 -0.7348719  -0.7432179  -0.68012128
 -0.7295642  -0.73255741 -0.72339392 -0.71927967 -0.65999356 -0.73710257
 -0.67052277 -0.65900018 -0.73284984 -0.68128924 -0.67837347 -0.72413474
 -0.78591888 -0.78993376 -0.68276838 -0.68926181 -0.68429193 -0.74419528
 -0.71235481 -0.66827093 -0.76537156 -0.75058721 -0.78626861 -0.72192743
 -0.69864697 -0.74551555 -0.75332275 -0.75957389 -0.74602129 -0.83760688
 -0.6755785  -0.70616484 -0.69957321 -0.74346623 -0.79351437 -0.74687515
 -0.68635074 -0.7414692  -0.68415974 -0.68260005 -0.74086539 -0.75663914
 -0.6899279  -0.75987148 -0.6910945  -0.69186482 -0.7102983  -0.71737282
 -0.67513414 -0.72649351 -0.73280059 -0.69136673 -0.67934797 -0.76909593
 -0.66637338 -0.68727169 -0.69229641 -0.69442659 -0.76730652 -0.71413824
 -0.7362136  -0.71430402 -0.75401094 -0.71312089 -0.67520493 -0.6770537
 -0.68286745 -0.77433562 -0.77251461 -0.71086913 -0.68404539 -0.74541815
 -0.67370192 -0.70826658 -0.72946262 -0.7759022  -0.69891446 -0.70537141
 -0.65289699 -0.65161008 -0.75415452 -0.69266738 -0.7374932  -0.80879815
 -0.73105222 -0.73750496]","[0.47912874 0.49127849 0.47200861 0.52842532 0.51917429 0.47334605
 0.49844472 0.48811899 0.52009298 0.47750684 0.49427224 0.4859612
 0.5968718  0.57285725 0.60646484 0.61055504 0.53444108 0.53998984
 0.4927452  0.48731008 0.52698767 0.56292424 0.54608544 0.51150622
 0.48596492 0.48698814 0.46976566 0.47538639 0.48193778 0.54178185
 0.48030894 0.48434534 0.52092335 0.49272012 0.48073349 0.4746415
 0.46145799 0.46778304 0.46580935 0.47649955 0.50866684 0.50383862
 0.50075253 0.47336827 0.49558566 0.48081563 0.48865075 0.48485895
 0.48723316 0.48923445 0.48996972 0.48231123 0.4861318  0.49779625
 0.48170379 0.47722867 0.52131934 0.49570744 0.47821721 0.46630031
 0.49652963 0.51191618 0.4955244  0.48565588 0.45843786 0.49879357
 0.48965637 0.48666024 0.48728307 0.49996605 0.4857772  0.46968901
 0.49903557 0.53155729 0.52785384 0.485359   0.50251878 0.47814421
 0.48445215 0.50340919 0.49232152 0.48906178 0.49407943 0.47145511
 0.48597582 0.4940151  0.46283605 0.46672518 0.46529419 0.4734107
 0.47142569 0.48233938 0.48147663 0.562117   0.56715025 0.6356905
 0.55084157 0.56937667 0.52733128 0.51609046 0.54869246 0.52301925
 0.52040795 0.56422017 0.51877032 0.5168109  0.49154679 0.48678329
 0.565932   0.49057767 0.54181757 0.5267046  0.47624547 0.46041444
 0.46277721 0.55876738 0.48567439 0.50349009 0.48390228 0.5307121
 0.52247422 0.53763249 0.50443454 0.48869573 0.49263233 0.48665563
 0.53243677 0.48731623 0.48033989 0.53071701 0.49410151 0.51203252
 0.61055278 0.60018253 0.49553876 0.4772762  0.59803208 0.57668865
 0.48811917 0.58500014 0.57590766 0.47223902 0.65926978 0.57828386
 0.53747383 0.46152889 0.59710923 0.4605696  0.53562889 0.57697092
 0.55028596 0.53095946 0.48855198 0.56156538 0.57928665 0.48157683
 0.48861383 0.56594059 0.48314895 0.57062881 0.46089644 0.61113239
 0.5404608  0.48221444 0.54819917 0.53419932 0.54745866 0.50901828
 0.55037554 0.63666899 0.48100495 0.54702521 0.46243741 0.49924051
 0.58194192 0.54600158 0.49895982 0.53999473 0.59182656 0.5002789
 0.60537867 0.5806537  0.48523676 0.50713658 0.53238088 0.47381091
 0.5790786  0.46535537 0.57507562 0.48546415 0.56640441 0.63690432
 0.49584187 0.58568943 0.5796448  0.51149058 0.46770476 0.49204949
 0.58040793 0.48215876 0.60987859 0.48770586 0.5151904  0.48190769
 0.6021697  0.5541495  0.50423918 0.46354809 0.4585512  0.5288652
 0.53367973 0.46593302 0.49289936 0.48545345 0.4982731  0.48121998
 0.50412342 0.46198362 0.53945178 0.47871893 0.51388166 0.48612951
 0.58377552 0.57356119 0.49315335 0.56198571 0.512134   0.50764112
 0.51775856 0.54279728 0.55263657 0.46922532 0.55767283 0.49173464
 0.50775529 0.49393845 0.47693352 0.58766334 0.48861852 0.56206019
 0.54059709 0.48489263 0.62102056 0.45857537 0.55546673 0.47434536
 0.48396765 0.4901259  0.46313085 0.46912438 0.59034763 0.57453574
 0.62688196 0.48414984 0.5286423  0.49995601 0.5499502  0.57542733
 0.56196775 0.54910885 0.56856536 0.59943381 0.57466254 0.51044989
 0.46766196 0.51269238 0.51753269 0.51915608 0.46703723 0.58869938
 0.47606347 0.51427862 0.52927284 0.61918472 0.57168956 0.57372131
 0.55272335 0.48993567 0.49204676 0.4838589  0.49889773 0.48741016
 0.61921127 0.49245932 0.46347227 0.54249268 0.54314006 0.51336991
 0.5170493  0.49682886 0.48623332 0.58463231 0.55538898 0.46425913
 0.56991558 0.5043409  0.49280011 0.54286055 0.48494046 0.51579281
 0.45904252 0.53762205 0.47035772 0.5141835  0.52814151 0.4851632
 0.5708991  0.52834205 0.51293866 0.4755203  0.50528731 0.55605196
 0.57069968 0.5600363  0.47438268 0.54503909 0.59126944 0.50760747
 0.49493526 0.57102886 0.57676362 0.54577363 0.61837426 0.50969144
 0.58332766 0.66975335 0.54485011 0.53824181 0.56428156 0.48559723
 0.48971963 0.54427019 0.53254803 0.5629978  0.50787022 0.52811127
 0.4699006  0.5509958  0.5847794  0.56544386 0.54633792 0.60147802
 0.57893045 0.58286265 0.55486234 0.56752573 0.54050323 0.46662214
 0.47275306 0.55811582 0.50544313 0.46944177 0.54172064 0.58815708
 0.53313945 0.48014407 0.56903163 0.5454651  0.56351029 0.52307355
 0.57803201 0.56603311 0.57715528 0.50889365 0.48717645 0.5191095
 0.51904941 0.54254989 0.59175232 0.58262737 0.59267958 0.60185034
 0.52573048 0.54839471 0.57347561 0.49678001 0.62863848 0.61828764
 0.52259176 0.54121684 0.56204798 0.60057511 0.4768771  0.49023783
 0.56706329 0.52461892 0.53274551 0.54008392 0.52644172 0.52344857
 0.48604604 0.48537901 0.46531638 0.46755344 0.5934219  0.55091952
 0.60612004 0.58425014 0.54016238 0.46199133 0.50692218 0.58706851
 0.59030388 0.54724259 0.5773157  0.51881797 0.55500309 0.55466183
 0.48734314 0.4918144  0.58221888 0.56631044 0.46826146 0.5262353
 0.48514744 0.48981019 0.4972456  0.49476147 0.59892951 0.53619629
 0.49085117 0.59993578 0.54684173 0.54485909 0.51377611 0.56936569
 0.54755952 0.59624334 0.50768751 0.54005229 0.52388774 0.5758031
 0.54612433 0.5413839  0.59678047 0.45379113 0.55668763 0.61737819
 0.56521808 0.52432707 0.61855534 0.58509507 0.49505878 0.59360852
 0.54457439 0.48472333 0.5590218  0.47655048 0.54269755 0.58979552
 0.51370684 0.50765758 0.54999852 0.56823877 0.57015264 0.55082349
 0.54306465 0.58839716 0.55825482 0.51539951 0.57788742 0.5024754
 0.64290211 0.61102493 0.58665713 0.51918402 0.57155815 0.55896926
 0.57388502 0.53661445 0.55308161 0.51034533 0.49682176 0.5619874
 0.55580986 0.55775192 0.51370519 0.52193551 0.50169112 0.54606254
 0.52400065 0.46635544 0.48577357 0.5252646  0.54964321 0.61027701
 0.56304657 0.55297602 0.56672371 0.59449084 0.63603711 0.54786168
 0.54563476 0.54079762 0.50313079 0.55825664 0.57553935 0.53235732
 0.50714999 0.53918489]","[OrderedDict([('loss', 'square'), ('n_estimators', 207)]), OrderedDict([('loss', 'linear'), ('n_estimators', 468)]), OrderedDict([('loss', 'square'), ('n_estimators', 759)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 21)]), OrderedDict([('loss', 'square'), ('n_estimators', 32)]), OrderedDict([('loss', 'square'), ('n_estimators', 484)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 281)]), OrderedDict([('loss', 'linear'), ('n_estimators', 783)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 58)]), OrderedDict([('loss', 'linear'), ('n_estimators', 639)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 532)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 840)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 11)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 58)]), OrderedDict([('loss', 'square'), ('n_estimators', 65)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 68)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 74)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 45)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 43)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 43)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 39)]), OrderedDict([('loss', 'linear'), ('n_estimators', 252)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 244)]), OrderedDict([('loss', 'square'), ('n_estimators', 247)]), OrderedDict([('loss', 'square'), ('n_estimators', 240)]), OrderedDict([('loss', 'square'), ('n_estimators', 51)]), OrderedDict([('loss', 'square'), ('n_estimators', 51)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 309)]), OrderedDict([('loss', 'linear'), ('n_estimators', 315)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 178)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 171)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 173)]), OrderedDict([('loss', 'square'), ('n_estimators', 167)]), OrderedDict([('loss', 'square'), ('n_estimators', 553)]), OrderedDict([('loss', 'square'), ('n_estimators', 553)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 558)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 347)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 354)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 351)]), OrderedDict([('loss', 'square'), ('n_estimators', 359)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 993)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 990)]), OrderedDict([('loss', 'linear'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 993)]), OrderedDict([('loss', 'linear'), ('n_estimators', 997)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 233)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 224)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 219)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 219)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 49)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 51)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 51)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 52)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 53)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 54)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 440)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 434)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 405)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 405)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 397)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 932)]), OrderedDict([('loss', 'linear'), ('n_estimators', 927)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 920)]), OrderedDict([('loss', 'square'), ('n_estimators', 914)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 47)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 47)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 129)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 123)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 110)]), OrderedDict([('loss', 'square'), ('n_estimators', 107)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 105)]), OrderedDict([('loss', 'square'), ('n_estimators', 106)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 122)]), OrderedDict([('loss', 'square'), ('n_estimators', 141)]), OrderedDict([('loss', 'square'), ('n_estimators', 133)]), OrderedDict([('loss', 'square'), ('n_estimators', 135)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 699)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 699)]), OrderedDict([('loss', 'square'), ('n_estimators', 703)]), OrderedDict([('loss', 'square'), ('n_estimators', 692)]), OrderedDict([('loss', 'square'), ('n_estimators', 873)]), OrderedDict([('loss', 'linear'), ('n_estimators', 874)]), OrderedDict([('loss', 'square'), ('n_estimators', 880)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 879)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 599)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 658)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 662)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 247)]), OrderedDict([('loss', 'linear'), ('n_estimators', 388)]), OrderedDict([('loss', 'linear'), ('n_estimators', 424)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 421)]), OrderedDict([('loss', 'linear'), ('n_estimators', 198)]), OrderedDict([('loss', 'linear'), ('n_estimators', 205)]), OrderedDict([('loss', 'linear'), ('n_estimators', 195)]), OrderedDict([('loss', 'linear'), ('n_estimators', 137)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 667)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 648)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 661)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 664)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 382)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 450)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 467)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'linear'), ('n_estimators', 573)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 679)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 675)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'linear'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 313)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 723)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 635)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 582)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 322)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 340)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 773)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 713)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 766)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 778)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 504)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 502)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 708)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 288)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 750)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 771)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 498)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 401)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 501)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 497)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 496)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 763)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 771)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 674)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 288)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 276)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 650)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 412)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 410)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 11)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 344)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 998)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 678)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 543)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 999)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 682)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 425)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 369)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 1000)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 625)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 628)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 360)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 387)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'exponential'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 1000)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)]), OrderedDict([('loss', 'square'), ('n_estimators', 10)])]"
7,xgboost,"[-0.79871397 -0.79871397 -0.80737692 -0.76360788 -0.76360788 -0.80809347
 -0.80736786 -0.80737692 -0.80809347 -0.80737692 -0.76360788 -0.76360788
 -0.63440171 -0.7157302  -0.60605338 -0.80736786 -0.60605338 -0.60605338
 -0.60605338 -0.79215179 -0.60605338 -0.80809347 -0.63440171 -0.63440171
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.80736786 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.7157302  -0.79871397 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.79215179
 -0.79215179 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.80809347 -0.79215179 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.80736786 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.79871397 -0.79215179 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.80737692
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.76360788 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338 -0.60605338
 -0.60605338 -0.60605338]","[0.61081609 0.61081609 0.61077041 0.56792953 0.56792953 0.6116629
 0.61059007 0.61077041 0.6116629  0.61077041 0.56792953 0.56792953
 0.49093516 0.45400959 0.47479084 0.61059007 0.47479084 0.47479084
 0.47479084 0.59767512 0.47479084 0.6116629  0.49093516 0.49093516
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.61059007 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.45400959 0.61081609 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.59767512
 0.59767512 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.6116629  0.59767512 0.47479084 0.47479084 0.47479084
 0.47479084 0.61059007 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.61081609 0.59767512 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.61077041
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.56792953 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084 0.47479084
 0.47479084 0.47479084]","[OrderedDict([('max_depth', 6), ('tree_method', 'approx')]), OrderedDict([('max_depth', 6), ('tree_method', 'approx')]), OrderedDict([('max_depth', 8), ('tree_method', 'approx')]), OrderedDict([('max_depth', 4), ('tree_method', 'approx')]), OrderedDict([('max_depth', 4), ('tree_method', 'approx')]), OrderedDict([('max_depth', 7), ('tree_method', 'approx')]), OrderedDict([('max_depth', 9), ('tree_method', 'approx')]), OrderedDict([('max_depth', 8), ('tree_method', 'approx')]), OrderedDict([('max_depth', 7), ('tree_method', 'approx')]), OrderedDict([('max_depth', 8), ('tree_method', 'approx')]), OrderedDict([('max_depth', 4), ('tree_method', 'approx')]), OrderedDict([('max_depth', 4), ('tree_method', 'approx')]), OrderedDict([('max_depth', 1), ('tree_method', 'approx')]), OrderedDict([('max_depth', 3), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 10), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 5), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 7), ('tree_method', 'approx')]), OrderedDict([('max_depth', 1), ('tree_method', 'approx')]), OrderedDict([('max_depth', 1), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 9), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 3), ('tree_method', 'approx')]), OrderedDict([('max_depth', 6), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 5), ('tree_method', 'approx')]), OrderedDict([('max_depth', 5), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 7), ('tree_method', 'approx')]), OrderedDict([('max_depth', 5), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 9), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 6), ('tree_method', 'approx')]), OrderedDict([('max_depth', 5), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 8), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 4), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')]), OrderedDict([('max_depth', 2), ('tree_method', 'approx')])]"
